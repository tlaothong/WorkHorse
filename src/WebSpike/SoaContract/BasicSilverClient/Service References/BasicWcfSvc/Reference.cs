//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace BasicSilverClient.BasicWcfSvc {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicSimpleRequest", Namespace="http://schemas.datacontract.org/2004/07/MvcWebSite.Models.Services")]
    public partial class BasicSimpleRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicSimpleResponse", Namespace="http://schemas.datacontract.org/2004/07/MvcWebSite.Models.Services")]
    public partial class BasicSimpleResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BasicWcfSvc.IBasicWcf")]
    public interface IBasicWcf {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBasicWcf/DoWork", ReplyAction="http://tempuri.org/IBasicWcf/DoWorkResponse")]
        System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState);
        
        void EndDoWork(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBasicWcf/BasicSimple", ReplyAction="http://tempuri.org/IBasicWcf/BasicSimpleResponse")]
        System.IAsyncResult BeginBasicSimple(BasicSilverClient.BasicWcfSvc.BasicSimpleRequest req, System.AsyncCallback callback, object asyncState);
        
        BasicSilverClient.BasicWcfSvc.BasicSimpleResponse EndBasicSimple(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBasicWcfChannel : BasicSilverClient.BasicWcfSvc.IBasicWcf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasicSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BasicSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BasicSilverClient.BasicWcfSvc.BasicSimpleResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BasicSilverClient.BasicWcfSvc.BasicSimpleResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BasicWcfClient : System.ServiceModel.ClientBase<BasicSilverClient.BasicWcfSvc.IBasicWcf>, BasicSilverClient.BasicWcfSvc.IBasicWcf {
        
        private BeginOperationDelegate onBeginDoWorkDelegate;
        
        private EndOperationDelegate onEndDoWorkDelegate;
        
        private System.Threading.SendOrPostCallback onDoWorkCompletedDelegate;
        
        private BeginOperationDelegate onBeginBasicSimpleDelegate;
        
        private EndOperationDelegate onEndBasicSimpleDelegate;
        
        private System.Threading.SendOrPostCallback onBasicSimpleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BasicWcfClient() {
        }
        
        public BasicWcfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BasicWcfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicWcfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BasicWcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DoWorkCompleted;
        
        public event System.EventHandler<BasicSimpleCompletedEventArgs> BasicSimpleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BasicSilverClient.BasicWcfSvc.IBasicWcf.BeginDoWork(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoWork(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void BasicSilverClient.BasicWcfSvc.IBasicWcf.EndDoWork(System.IAsyncResult result) {
            base.Channel.EndDoWork(result);
        }
        
        private System.IAsyncResult OnBeginDoWork(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((BasicSilverClient.BasicWcfSvc.IBasicWcf)(this)).BeginDoWork(callback, asyncState);
        }
        
        private object[] OnEndDoWork(System.IAsyncResult result) {
            ((BasicSilverClient.BasicWcfSvc.IBasicWcf)(this)).EndDoWork(result);
            return null;
        }
        
        private void OnDoWorkCompleted(object state) {
            if ((this.DoWorkCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoWorkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoWorkAsync() {
            this.DoWorkAsync(null);
        }
        
        public void DoWorkAsync(object userState) {
            if ((this.onBeginDoWorkDelegate == null)) {
                this.onBeginDoWorkDelegate = new BeginOperationDelegate(this.OnBeginDoWork);
            }
            if ((this.onEndDoWorkDelegate == null)) {
                this.onEndDoWorkDelegate = new EndOperationDelegate(this.OnEndDoWork);
            }
            if ((this.onDoWorkCompletedDelegate == null)) {
                this.onDoWorkCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoWorkCompleted);
            }
            base.InvokeAsync(this.onBeginDoWorkDelegate, null, this.onEndDoWorkDelegate, this.onDoWorkCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult BasicSilverClient.BasicWcfSvc.IBasicWcf.BeginBasicSimple(BasicSilverClient.BasicWcfSvc.BasicSimpleRequest req, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBasicSimple(req, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BasicSilverClient.BasicWcfSvc.BasicSimpleResponse BasicSilverClient.BasicWcfSvc.IBasicWcf.EndBasicSimple(System.IAsyncResult result) {
            return base.Channel.EndBasicSimple(result);
        }
        
        private System.IAsyncResult OnBeginBasicSimple(object[] inValues, System.AsyncCallback callback, object asyncState) {
            BasicSilverClient.BasicWcfSvc.BasicSimpleRequest req = ((BasicSilverClient.BasicWcfSvc.BasicSimpleRequest)(inValues[0]));
            return ((BasicSilverClient.BasicWcfSvc.IBasicWcf)(this)).BeginBasicSimple(req, callback, asyncState);
        }
        
        private object[] OnEndBasicSimple(System.IAsyncResult result) {
            BasicSilverClient.BasicWcfSvc.BasicSimpleResponse retVal = ((BasicSilverClient.BasicWcfSvc.IBasicWcf)(this)).EndBasicSimple(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBasicSimpleCompleted(object state) {
            if ((this.BasicSimpleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BasicSimpleCompleted(this, new BasicSimpleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BasicSimpleAsync(BasicSilverClient.BasicWcfSvc.BasicSimpleRequest req) {
            this.BasicSimpleAsync(req, null);
        }
        
        public void BasicSimpleAsync(BasicSilverClient.BasicWcfSvc.BasicSimpleRequest req, object userState) {
            if ((this.onBeginBasicSimpleDelegate == null)) {
                this.onBeginBasicSimpleDelegate = new BeginOperationDelegate(this.OnBeginBasicSimple);
            }
            if ((this.onEndBasicSimpleDelegate == null)) {
                this.onEndBasicSimpleDelegate = new EndOperationDelegate(this.OnEndBasicSimple);
            }
            if ((this.onBasicSimpleCompletedDelegate == null)) {
                this.onBasicSimpleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBasicSimpleCompleted);
            }
            base.InvokeAsync(this.onBeginBasicSimpleDelegate, new object[] {
                        req}, this.onEndBasicSimpleDelegate, this.onBasicSimpleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override BasicSilverClient.BasicWcfSvc.IBasicWcf CreateChannel() {
            return new BasicWcfClientChannel(this);
        }
        
        private class BasicWcfClientChannel : ChannelBase<BasicSilverClient.BasicWcfSvc.IBasicWcf>, BasicSilverClient.BasicWcfSvc.IBasicWcf {
            
            public BasicWcfClientChannel(System.ServiceModel.ClientBase<BasicSilverClient.BasicWcfSvc.IBasicWcf> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginDoWork(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("DoWork", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDoWork(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DoWork", _args, result);
            }
            
            public System.IAsyncResult BeginBasicSimple(BasicSilverClient.BasicWcfSvc.BasicSimpleRequest req, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = req;
                System.IAsyncResult _result = base.BeginInvoke("BasicSimple", _args, callback, asyncState);
                return _result;
            }
            
            public BasicSilverClient.BasicWcfSvc.BasicSimpleResponse EndBasicSimple(System.IAsyncResult result) {
                object[] _args = new object[0];
                BasicSilverClient.BasicWcfSvc.BasicSimpleResponse _result = ((BasicSilverClient.BasicWcfSvc.BasicSimpleResponse)(base.EndInvoke("BasicSimple", _args, result)));
                return _result;
            }
        }
    }
}
