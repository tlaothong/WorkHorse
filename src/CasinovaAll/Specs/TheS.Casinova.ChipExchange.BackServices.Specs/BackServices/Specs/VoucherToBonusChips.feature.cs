// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.ChipExchange.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class VoucherToBonusChipsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "VoucherToBonusChips.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "VoucherToBonusChips", "In order to exchange voucher to bonus chips\r\nAs a back server\r\nI want to be given" +
                    " some bonus chips to player and update used voucher", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Code",
                        "Amount",
                        "UserName",
                        "CanUser"});
            table1.AddRow(new string[] {
                        "jK2A",
                        "500",
                        "Boy",
                        "true"});
            table1.AddRow(new string[] {
                        "K9a1",
                        "1000",
                        "Tao",
                        "true"});
            table1.AddRow(new string[] {
                        "Gh5E",
                        "5000",
                        "Nit",
                        "false"});
#line 7
testRunner.Given("(VoucherToBonusChips)server has voucher information as:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "MinChipToMoneyExchange",
                        "MinMoneyToChipExchange",
                        "MoneyToChipRate",
                        "MoneyToBonusChipRate",
                        "ChipToBonusChipRate",
                        "VoucherToBonusChipRate"});
            table2.AddRow(new string[] {
                        "exchange1",
                        "1000",
                        "1000",
                        "1",
                        "2",
                        "1",
                        "1"});
            table2.AddRow(new string[] {
                        "Boy",
                        "2000",
                        "2000",
                        "1",
                        "2",
                        "1.5",
                        "1"});
#line 13
testRunner.Given("(VoucherToBonusChips)server has exchange setting information as:", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ผู้เล่นแลกคูปองเป็นชิฟตาย มีคูปองตามรหัสที่ระบุและคูปองยังไม่ถูกใช้งาน, ระบบตรวจส" +
            "อบคูปองและเพิ่มชิฟตายให้กับผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "VoucherToBonusChips")]
        public virtual void ผเลนแลกคปองเปนชฟตายมคปองตามรหสทระบและคปองยงไมถกใชงานระบบตรวจสอบคปองและเพมชฟตายใหกบผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ผู้เล่นแลกคูปองเป็นชิฟตาย มีคูปองตามรหัสที่ระบุและคูปองยังไม่ถูกใช้งาน, ระบบตรวจส" +
                    "อบคูปองและเพิ่มชิฟตายให้กับผู้เล่น", new string[] {
                        "record_mock",
                        "record_mock"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given("The VoucherToBounusChipsExecutor has been created and initialized");
#line 21
testRunner.And("(VoucherToBonusChips)sent Code: \'jK2A\' the voucher information should recieved");
#line 22
testRunner.And("(VoucherToBonusChips)request voucher avaliable for exchange");
#line 23
testRunner.And("(VoucherToBonusChips)sent ExchangeSettingName: \'exchange1\' the exchange setting s" +
                    "hould recieved");
#line 24
testRunner.And("(VoucherToBonusChips)voucher should be update(Code: \'jK2A\')");
#line 25
testRunner.And("(VoucherToBonusChips)the user bonus chips should be adding(UserName: \'OhAe\', Amou" +
                    "nt:\'500\')");
#line 26
testRunner.When("call VoucherToBonusChipsExecutor(Code: \'jK2A\', UserName: \'OhAe\')");
#line 27
testRunner.Then("the player profile should be update");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ผู้เล่นแลกคูปองเป็นชิฟตาย มีคูปองตามรหัสที่ระบุและคูปองถูกใช้งานแล้ว, ระบบตรวจสอบ" +
            "คูปองและแจ้งเตือน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "VoucherToBonusChips")]
        public virtual void ผเลนแลกคปองเปนชฟตายมคปองตามรหสทระบและคปองถกใชงานแลวระบบตรวจสอบคปองและแจงเตอน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ผู้เล่นแลกคูปองเป็นชิฟตาย มีคูปองตามรหัสที่ระบุและคูปองถูกใช้งานแล้ว, ระบบตรวจสอบ" +
                    "คูปองและแจ้งเตือน", new string[] {
                        "record_mock"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given("The VoucherToBounusChipsExecutor has been created and initialized");
#line 32
testRunner.And("(VoucherToBonusChips)sent Code: \'Gh5E\' the voucher information should recieved");
#line 33
testRunner.And("(VoucherToBonusChips)request voucher not avaliable for exchange");
#line 34
testRunner.When("call VoucherToBonusChipsExecutor(Code: \'Gh5E\', UserName: \'OhAe\')");
#line 35
testRunner.Then("abort operation");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ผู้เล่นแลกคูปองเป็นชิฟตาย ไม่มีคูปองตามรหัสที่ระบุ, ระบบตรวจสอบคูปองและแจ้งเตือน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "VoucherToBonusChips")]
        public virtual void ผเลนแลกคปองเปนชฟตายไมมคปองตามรหสทระบระบบตรวจสอบคปองและแจงเตอน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ผู้เล่นแลกคูปองเป็นชิฟตาย ไม่มีคูปองตามรหัสที่ระบุ, ระบบตรวจสอบคูปองและแจ้งเตือน", new string[] {
                        "record_mock"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
testRunner.Given("The VoucherToBounusChipsExecutor has been created and initialized");
#line 40
testRunner.When("Pending for next task");
#line 41
testRunner.Then("Pending for next task");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
