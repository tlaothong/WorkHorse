// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.ChipExchange.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class PayVoucherFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PayVoucher.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PayVoucher", "In order to pay chip for voucher\r\nAs a back server\r\nI want to be decrease player " +
                    "balance and create voucher information", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "NonRefundable",
                        "Refundable"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "500",
                        "1800"});
            table1.AddRow(new string[] {
                        "Boy",
                        "121.21",
                        "726.29"});
            table1.AddRow(new string[] {
                        "Nit",
                        "36.99",
                        "383.21"});
            table1.AddRow(new string[] {
                        "Au",
                        "00.00",
                        "3761.99"});
#line 8
testRunner.Given("(PayVoucher)server has player information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ผู้เล่นแลกคูปองด้วยชิฟ มีชิฟตายพอดีสำหรับแลกคูปอง, ระบบอัพเดทข้อมูลผู้เล่นและสร้า" +
            "งข้อมูลคูปองใหม่")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "PayVoucher")]
        public virtual void ผเลนแลกคปองดวยชฟมชฟตายพอดสำหรบแลกคปองระบบอพเดทขอมลผเลนและสรางขอมลคปองใหม()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ผู้เล่นแลกคูปองด้วยชิฟ มีชิฟตายพอดีสำหรับแลกคูปอง, ระบบอัพเดทข้อมูลผู้เล่นและสร้า" +
                    "งข้อมูลคูปองใหม่", new string[] {
                        "record_mock",
                        "record_mock"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
testRunner.Given("The PayVoucherExecutor has been created and initialized");
#line 18
testRunner.And("(PayVoucher)sent UserName: \'OhAe\' the player profile information should recieved");
#line 19
testRunner.And("player balance(chips, bonus chips) should more than or equal request voucher(Amou" +
                    "nt: \'500\')");
#line 20
testRunner.And("player balance(bonus chips) more than or equal request voucher(Amount: \'500\')");
#line 21
testRunner.And("player balance information should be update(UserName: \'OhAe\', chips: \'1800\', bonu" +
                    "s chips: \'0\')");
#line 22
testRunner.And("voucher code should be generate new code(VoucherCode: \'Ys7S\')");
#line 23
testRunner.And("voucher information should be create(VoucherCode: \'Ys7S\', Amount: \'500\', UserName" +
                    ": \'OhAe\', CanUse: \'true\')");
#line 24
testRunner.When("call PayVoucherExecutor(UserName: \'OhAe\', Amount: \'500\')");
#line 25
testRunner.Then("the player profile should be update and voucher information should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
