// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.ChipExchange.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ChipsToMoneyFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChipsToMoney.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ChipsToMoney", "In order to exchange chips to money\r\nAs a back server\r\nI want to be update user p" +
                    "rofile and sent cheque by user address", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "NonRefundable",
                        "Refundable"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "500",
                        "1800"});
            table1.AddRow(new string[] {
                        "Boy",
                        "700",
                        "726.29"});
            table1.AddRow(new string[] {
                        "Nit",
                        "36.99",
                        "383.21"});
            table1.AddRow(new string[] {
                        "Au",
                        "150.00",
                        "3761.99"});
#line 8
testRunner.Given("(ChipsToMoney)server has player information as:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "MinChipToMoneyExchange",
                        "MinMoneyToChipExchange",
                        "MoneyToChipRate",
                        "MoneyToBonusChipRate",
                        "ChipToBonusChipRate",
                        "VoucherToBonusChipRate"});
            table2.AddRow(new string[] {
                        "Exchange1",
                        "1000",
                        "1000",
                        "1",
                        "2",
                        "1",
                        "1"});
            table2.AddRow(new string[] {
                        "Boy",
                        "2000",
                        "2000",
                        "1",
                        "2",
                        "1.5",
                        "1"});
#line 16
testRunner.Given("(ChipsToMoney)server has exchange setting information as:", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(ChipsToMoney)ผู้เล่นแลกชิฟเป็นเป็นเงิน โดยระบุข้อมูลที่อยู่ ระบุชิฟที่ต้องการแลก" +
            "มากกว่าขั้นต่ำ และมีชิฟเป็นมากกว่าจำนวนที่ต้องการแลก, ระบบบันทึกข้อมูลการแลกเช็ค" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ChipsToMoney")]
        public virtual void ChipsToMoneyผเลนแลกชฟเปนเปนเงนโดยระบขอมลทอยระบชฟทตองการแลกมากกวาขนตำและมชฟเปนมากกวาจำนวนทตองการแลกระบบบนทกขอมลการแลกเชค()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(ChipsToMoney)ผู้เล่นแลกชิฟเป็นเป็นเงิน โดยระบุข้อมูลที่อยู่ ระบุชิฟที่ต้องการแลก" +
                    "มากกว่าขั้นต่ำ และมีชิฟเป็นมากกว่าจำนวนที่ต้องการแลก, ระบบบันทึกข้อมูลการแลกเช็ค" +
                    "", new string[] {
                        "record_mock",
                        "record_mock"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
testRunner.Given("The ChipsToMoneyExecutor has been created and initialized");
#line 24
testRunner.And("(ChipsToMoney)sent UserName: \'OhAe\' the player profile information should recieve" +
                    "d");
#line 25
testRunner.And("(ChipsToMoney)player balance information should be update(UserName: \'OhAe\', chips" +
                    ": \'1800\', bonus chips: \'0\')");
#line 26
testRunner.And("Cheque information should be create(UserName: \'OhAe\', Address: \'12 Road Srijun Su" +
                    "bDistrict Naimueng District MuengKhonKaen 40000\', Amount: \'500\')");
#line 27
testRunner.When("call ChipsToMoneyExecutor(UsserName: \'OhAe\', Address: \'12 Road Srijun SubDistrict" +
                    " Naimueng District MuengKhonKaen 40000\', Amount: \'500\')");
#line 28
testRunner.Then("the player profile should be update and cheque information should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
