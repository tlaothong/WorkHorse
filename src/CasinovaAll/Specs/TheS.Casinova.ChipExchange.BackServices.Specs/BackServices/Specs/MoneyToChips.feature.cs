// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.ChipExchange.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class MoneyToChipsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MoneyToChips.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MoneyToChips", "In order to exchange money to chips\r\nAs a back server\r\nI want to be payment exhca" +
                    "nge cost by credit card and given some chips to player", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "MinChipToMoneyExchange",
                        "MinMoneyToChipExchange",
                        "MoneyToChipRate",
                        "MoneyToBonusChipRate",
                        "ChipToBonusChipRate",
                        "VoucherToBonusChipRate"});
            table1.AddRow(new string[] {
                        "exchange1",
                        "1000",
                        "1000",
                        "1",
                        "1",
                        "1",
                        "1"});
            table1.AddRow(new string[] {
                        "Boy",
                        "2000",
                        "2000",
                        "1",
                        "2",
                        "1.5",
                        "1"});
#line 8
testRunner.Given("(MoneyToChips)server has exchange setting information as:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "FirstName",
                        "LastName",
                        "AccountType",
                        "CardType",
                        "AccountNo",
                        "CVV",
                        "ExpireDate",
                        "Active"});
            table2.AddRow(new string[] {
                        "OhAe",
                        "Sirinarin",
                        "AAA",
                        "Primary",
                        "VISA",
                        "123445677891",
                        "1234",
                        "2009/12",
                        "True"});
            table2.AddRow(new string[] {
                        "OhAe",
                        "Siriwasan",
                        "AAA",
                        "Secondary",
                        "Mastercard",
                        "852612246578",
                        "5135",
                        "2009/9",
                        "True"});
            table2.AddRow(new string[] {
                        "Nit",
                        "Nittaya",
                        "BBB",
                        "Primary",
                        "Mastercard",
                        "551654787921",
                        "1549",
                        "2009/10",
                        "True"});
#line 13
testRunner.And("(MoneyToChips)server has player account information as:", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(MoneyToChips)ผู้เล่นแลกเงินเป็นชิฟเป็น บัตรเครดิตของผู้เล่นถูกต้อง ระบุจำนวนเงิน" +
            "มากกว่าจำนวนขั้นต่ำ, ระบบเพิ่มชิฟเป็นให้กับผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MoneyToChips")]
        public virtual void MoneyToChipsผเลนแลกเงนเปนชฟเปนบตรเครดตของผเลนถกตองระบจำนวนเงนมากกวาจำนวนขนตำระบบเพมชฟเปนใหกบผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(MoneyToChips)ผู้เล่นแลกเงินเป็นชิฟเป็น บัตรเครดิตของผู้เล่นถูกต้อง ระบุจำนวนเงิน" +
                    "มากกว่าจำนวนขั้นต่ำ, ระบบเพิ่มชิฟเป็นให้กับผู้เล่น", new string[] {
                        "record_mock",
                        "record_mock"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
testRunner.Given("The MoneyToChipsExecutor has been created and initialized");
#line 23
testRunner.And("(MoneyToChips)sent ExchangeSettingName: \'exchange1\' the exchange setting should r" +
                    "ecieved");
#line 24
testRunner.And("(MoneyToChips)sent UserName: \'OhAe\', AccountType: \'Primary\' the player account in" +
                    "formation should recieved");
#line 25
testRunner.And("(MoneyToChips)the PayExchangeEngine should be call and complete transaction sent " +
                    "UserName: \'OhAe\', Amount: \'2000\', CardType: \'VISA\', FistName: \'Sirinarin\', LastN" +
                    "ame: \'AAA\', AccountNo: \'123445677891\', CVV: \'1234\', ExpireDate: \'2009/12\'");
#line 26
testRunner.And("(MoneyToChips)the user chips should be adding(UserName: \'OhAe\', Amount:\'2000\')");
#line 27
testRunner.When("call MoneyToChipsExecutor(UserName: \'OhAe\', Amount: \'2000\', AccountType: \'Primary" +
                    "\')");
#line 28
testRunner.Then("(MoneyToChips)the result should be update");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(MoneyToChips)ผู้เล่นแลกเงินเป็นชิฟเป็น บัตรเครดิตของผู้เล่นถูกต้อง ระบุจำนวนน้อย" +
            "กว่าจำนวนขั้นต่ำ, ระบบไม่อนุญาติให้แลกเงิน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "MoneyToChips")]
        public virtual void MoneyToChipsผเลนแลกเงนเปนชฟเปนบตรเครดตของผเลนถกตองระบจำนวนนอยกวาจำนวนขนตำระบบไมอนญาตใหแลกเงน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(MoneyToChips)ผู้เล่นแลกเงินเป็นชิฟเป็น บัตรเครดิตของผู้เล่นถูกต้อง ระบุจำนวนน้อย" +
                    "กว่าจำนวนขั้นต่ำ, ระบบไม่อนุญาติให้แลกเงิน", new string[] {
                        "record_mock"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("The MoneyToChipsExecutor has been created and initialized");
#line 33
testRunner.And("(MoneyToChips)sent ExchangeSettingName: \'exchange1\' the exchange setting should r" +
                    "ecieved");
#line 34
testRunner.And("(MoneyToChips)sent UserName: \'OhAe\', AccountType: \'Primary\' the player account in" +
                    "formation should recieved");
#line 35
testRunner.When("Expected exception and call MoneyToChipsExecutor(UserName: \'OhAe\', Amount: \'500\'," +
                    " AccountType: \'Primary\')");
#line 36
testRunner.Then("(MoneyToChips)the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
