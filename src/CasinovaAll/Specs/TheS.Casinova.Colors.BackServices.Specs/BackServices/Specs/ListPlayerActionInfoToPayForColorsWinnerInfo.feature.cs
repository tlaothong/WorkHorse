// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.Colors.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListPlayerActionInfoToPayForColorsWinnerInfoFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListPlayerActionInfoToPayForColorsWinnerInfo.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListPlayerActionInfoToPayForColorsWinnerInfo", "In order to list player action information\r\nAs a back server\r\nI want to be checki" +
                    "ng that player ever pay for winner on this round", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "GameRoundInfoRoundID",
                        "UserProfileBalance",
                        "ActionType",
                        "DateTime(for example not use this row)"});
            table1.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "GetWinner",
                        "2553/3/12 10:00"});
            table1.AddRow(new string[] {
                        "12",
                        "Boy",
                        "GetWinner",
                        "2553/3/12 11:20"});
            table1.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "Black",
                        "2553/3/12 11:22"});
            table1.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "GetWinner",
                        "2553/3/12 11:28"});
            table1.AddRow(new string[] {
                        "13",
                        "Nit",
                        "GetWinner",
                        "2553/3/12 10:00"});
            table1.AddRow(new string[] {
                        "13",
                        "Boy",
                        "White",
                        "2553/3/12 11:20"});
            table1.AddRow(new string[] {
                        "14",
                        "OhAe",
                        "GetWinner",
                        "2553/3/12 11:22"});
            table1.AddRow(new string[] {
                        "14",
                        "OhAe",
                        "Black",
                        "2553/3/12 11:28"});
#line 8
testRunner.Given("server has player action information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ได้รับ GameRoundInfoRoundID และ UserProfileBalance ,ระบบมีข้อมูล PlayerActionInfo ในระบบ, ระบบดึงข้อมูล " +
            "PlayerActionInfo กลับ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListPlayerActionInfoToPayForColorsWinnerInfo")]
        public virtual void ไดรบRoundIDและUserNameระบบมขอมลPlayerActionInfoในระบบระบบดงขอมลPlayerActionInfoกลบ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ได้รับ GameRoundInfoRoundID และ UserProfileBalance ,ระบบมีข้อมูล PlayerActionInfo ในระบบ, ระบบดึงข้อมูล " +
                    "PlayerActionInfo กลับ", new string[] {
                        "record_mock",
                        "record_mock"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
testRunner.Given("The PayForColorsWinnerInfoExecutor has been created and initialized");
#line 22
testRunner.And("sent GameRoundInfoRoundID: \'12\', UserProfileBalance: \'OhAe\' and expected PlayerActionInfo(s) in server");
#line 23
testRunner.When("call List(PayForColorsWinnerInfoCommand), GameRoundInfoRoundID: \'12\', UserProfileBalance: \'OhAe\'");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "GameRoundInfoRoundID",
                        "UserProfileBalance",
                        "ActionType",
                        "DateTime(for example not use this row)"});
            table2.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "GetWinner",
                        "2553/3/12 10:00"});
            table2.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "GetWinner",
                        "2553/3/12 11:28"});
#line 24
testRunner.Then("player should have PlayerActionInfo on this round as:", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ได้รับ GameRoundInfoRoundID และ UserProfileBalance ,ระบบไม่มีข้อมูล PlayerActionInfo ในระบบ, ระบบดึงข้อม" +
            "ูล PlayerActionInfo เปล่ากลับ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListPlayerActionInfoToPayForColorsWinnerInfo")]
        public virtual void ไดรบRoundIDและUserNameระบบไมมขอมลPlayerActionInfoในระบบระบบดงขอมลPlayerActionInfoเปลากลบ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ได้รับ GameRoundInfoRoundID และ UserProfileBalance ,ระบบไม่มีข้อมูล PlayerActionInfo ในระบบ, ระบบดึงข้อม" +
                    "ูล PlayerActionInfo เปล่ากลับ", new string[] {
                        "record_mock"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given("The PayForColorsWinnerInfoExecutor has been created and initialized");
#line 32
testRunner.And("sent GameRoundInfoRoundID: \'13\', UserProfileBalance: \'OhAe\' and expected PlayerActionInfo(s) in server");
#line 33
testRunner.When("call List(PayForColorsWinnerInfoCommand), GameRoundInfoRoundID: \'12\', UserProfileBalance: \'OhAe\'");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "GameRoundInfoRoundID",
                        "UserProfileBalance",
                        "ActionType",
                        "DateTime(for example not use this row)"});
#line 34
testRunner.Then("player should have PlayerActionInfo on this round as:", ((string)(null)), table3);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
