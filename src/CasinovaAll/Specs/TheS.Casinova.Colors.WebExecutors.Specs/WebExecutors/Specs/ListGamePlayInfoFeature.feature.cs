// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.Colors.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListGamePlayInfoFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListGamePlayInfoFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListGamePlayInfo", "In order to list game play information\r\nAs a system\r\nI want to list game play inf" +
                    "ormation of player", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "TotalBetBlack",
                        "TotalBetWhite",
                        "Winner",
                        "WinnerLastUpdate",
                        "TrackingID",
                        "OnGoingTrackingID"});
            table1.AddRow(new string[] {
                        "Lalaka",
                        "5",
                        "320",
                        "20",
                        "Black",
                        "10:00",
                        "{BAF9F79B-BDCC-4FA5-804D-9C8B4ED42887}",
                        "{BAF9F79B-BDCC-4FA5-804D-9C8B4ED42887}"});
            table1.AddRow(new string[] {
                        "Nittaya",
                        "6",
                        "40",
                        "30",
                        "White",
                        "12:00",
                        "{046CDB68-8B43-431C-8584-11A6049C0CF4}",
                        "{046CDB68-8B43-431C-8584-11A6049C0CF4}"});
            table1.AddRow(new string[] {
                        "Lalaka",
                        "7",
                        "11",
                        "100",
                        "White",
                        "15:00",
                        "{046CDB68-8B43-431C-8584-11A6049C0CF4}",
                        "{F0A52B67-DC51-424F-BF2E-CA72D8E07FA8}"});
#line 8
testRunner.Given("Server has game play information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบได้รับข้อมูล username ถูกต้อง และมีข้อมูลการเล่นเกมของผู้เล่น ระบบลิสต์ข้อมูล" +
            "โต๊ะเกมที่ผู้เล่นเคยเล่นไว้ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListGamePlayInfo")]
        public virtual void ระบบไดรบขอมลUsernameถกตองและมขอมลการเลนเกมของผเลนระบบลสตขอมลโตะเกมทผเลนเคยเลนไวได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบได้รับข้อมูล username ถูกต้อง และมีข้อมูลการเล่นเกมของผู้เล่น ระบบลิสต์ข้อมูล" +
                    "โต๊ะเกมที่ผู้เล่นเคยเล่นไว้ได้", new string[] {
                        "record_mock"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("The ListGamePlayInfoExecutor has been created and initialized");
#line 17
testRunner.And("Sent userName\'Lalaka\' for list game play information");
#line 18
testRunner.When("Call ListGamePlayInfoExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "TotalBetBlack",
                        "TotalBetWhite",
                        "Winner",
                        "WinnerLastUpdate",
                        "TrackingID",
                        "OnGoingTrackingID"});
            table2.AddRow(new string[] {
                        "Lalaka",
                        "5",
                        "320",
                        "20",
                        "Black",
                        "10:00",
                        "{BAF9F79B-BDCC-4FA5-804D-9C8B4ED42887}",
                        "{BAF9F79B-BDCC-4FA5-804D-9C8B4ED42887}"});
            table2.AddRow(new string[] {
                        "Lalaka",
                        "7",
                        "11",
                        "100",
                        "White",
                        "15:00",
                        "{046CDB68-8B43-431C-8584-11A6049C0CF4}",
                        "{F0A52B67-DC51-424F-BF2E-CA72D8E07FA8}"});
#line 19
testRunner.Then("The game play information should be :", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบได้รับข้อมูล username ถูกต้อง ระบบลิสต์ข้อมูลโต๊ะเกมแต่ไม่มีข้อมูล เนื่องจากผ" +
            "ู้เล่นยังไม่เคยเล่นเกมที่โต๊ะใด ๆ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListGamePlayInfo")]
        public virtual void ระบบไดรบขอมลUsernameถกตองระบบลสตขอมลโตะเกมแตไมมขอมลเนองจากผเลนยงไมเคยเลนเกมทโตะใดๆ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบได้รับข้อมูล username ถูกต้อง ระบบลิสต์ข้อมูลโต๊ะเกมแต่ไม่มีข้อมูล เนื่องจากผ" +
                    "ู้เล่นยังไม่เคยเล่นเกมที่โต๊ะใด ๆ", new string[] {
                        "record_mock"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
testRunner.Given("The ListGamePlayInfoExecutor has been created and initialized");
#line 27
testRunner.And("Sent userName\'BabyBoy\' for list game play information");
#line 28
testRunner.When("Call ListGamePlayInfoExecutor()");
#line 29
testRunner.Then("The game play information should be null");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบไม่ได้รับข้อมูล username ระบบลิสต์ข้อมูลโต๊ะเกมไม่ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListGamePlayInfo")]
        public virtual void ระบบไมไดรบขอมลUsernameระบบลสตขอมลโตะเกมไมได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบไม่ได้รับข้อมูล username ระบบลิสต์ข้อมูลโต๊ะเกมไม่ได้", new string[] {
                        "record_mockInfo"});
#line 32
this.ScenarioSetup(scenarioInfo);
#line 33
testRunner.Given("The ListGamePlayInfoExecutor has been created and initialized");
#line 34
testRunner.And("Sent userName\'\' for list game play information");
#line 35
testRunner.When("Call ListGamePlayInfoExecutor() for validate username");
#line 36
testRunner.Then("The game play information should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
