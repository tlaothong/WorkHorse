// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.Colors.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GetGameResultFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetGameResultFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetGameResult", "In order to get game result\r\nAs a system\r\nI want to get game result when game fin" +
                    "ish", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundId",
                        "StartTime",
                        "EndTime",
                        "BlackPot",
                        "WhitePot",
                        "HandCount"});
            table1.AddRow(new string[] {
                        "1",
                        "09:00",
                        "09:30",
                        "23",
                        "24",
                        "13"});
            table1.AddRow(new string[] {
                        "2",
                        "09:30",
                        "10:00",
                        "500",
                        "499",
                        "52"});
            table1.AddRow(new string[] {
                        "3",
                        "10:00",
                        "10:30",
                        "1500",
                        "1459",
                        "82"});
            table1.AddRow(new string[] {
                        "4",
                        "10:30",
                        "11:00",
                        "2001",
                        "2009",
                        "87"});
            table1.AddRow(new string[] {
                        "5",
                        "11:00",
                        "11:30",
                        "1655",
                        "1700",
                        "107"});
#line 7
testRunner.Given("Server has game result information", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบได้รับข้อมูล GameRoundInfoRoundID ที่เพิ่งจบเกม ระบบสามารถดึงข้อมูล GameRoundInfo ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetGameResult")]
        public virtual void ระบบไดรบขอมลRoundIDทเพงจบเกมระบบสามารถดงขอมลGameResultได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบได้รับข้อมูล GameRoundInfoRoundID ที่เพิ่งจบเกม ระบบสามารถดึงข้อมูล GameRoundInfo ได้", new string[] {
                        "record_mock"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
testRunner.Given("The GetGameResultExecutor has been created and initialized");
#line 18
testRunner.When("Call GetGameResultExecutor(GameRoundInfoRoundID\'5\')");
#line 19
testRunner.Then("the game result should be : GameRoundInfoRoundID \'5\' StartTime \'11:00\' EndTime \'11:30\' BlackPo" +
                    "t \'1655\' WhitePot \'1700\' HandCount \'107\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบได้รับข้อมูล GameRoundInfoRoundID อื่น ๆ ที่จบเกมแล้วและมีข้อมูลอยู่ใน Database ระบบสามารถ" +
            "ดึงข้อมูล GameRoundInfo ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetGameResult")]
        public virtual void ระบบไดรบขอมลRoundIDอนๆทจบเกมแลวและมขอมลอยในDatabaseระบบสามารถดงขอมลGameResultได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบได้รับข้อมูล GameRoundInfoRoundID อื่น ๆ ที่จบเกมแล้วและมีข้อมูลอยู่ใน Database ระบบสามารถ" +
                    "ดึงข้อมูล GameRoundInfo ได้", new string[] {
                        "record_mock"});
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
testRunner.Given("The GetGameResultExecutor has been created and initialized");
#line 24
testRunner.When("Call GetGameResultExecutor(GameRoundInfoRoundID\'2\')");
#line 25
testRunner.Then("the game result should be : GameRoundInfoRoundID \'2\' StartTime \'10:00\' EndTime \'10:30\' BlackPo" +
                    "t \'500\' WhitePot \'499\' HandCount \'52\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบได้รับข้อมูล GameRoundInfoRoundID ที่ไม่ถูกต้อง ระบบไม่สามารถดึงข้อมูล GameRoundInfo ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetGameResult")]
        public virtual void ระบบไดรบขอมลRoundIDทไมถกตองระบบไมสามารถดงขอมลGameResultได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบได้รับข้อมูล GameRoundInfoRoundID ที่ไม่ถูกต้อง ระบบไม่สามารถดึงข้อมูล GameRoundInfo ได้", new string[] {
                        "record_mock"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
testRunner.Given("The GetGameResultExecutor has been created and initialized");
#line 30
testRunner.When("Call GetGameResultExecutor(GameRoundInfoRoundID\'-3\')");
#line 31
testRunner.Then("the game result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
