// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.TwoWins.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class GetGameStatusFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetGameStatusFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GetGameStatus", "In order to get game status\r\nAs a system\r\nI want to get game status", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "WinnerHightNameNormal",
                        "WinnerLowNameNormal",
                        "WinnerHightRange",
                        "WinnerLowRange",
                        "Pot",
                        "HandRange"});
            table1.AddRow(new string[] {
                        "1",
                        "Nayit",
                        "Nayit",
                        "0-1000",
                        "0-50",
                        "3900",
                        "0-100"});
            table1.AddRow(new string[] {
                        "2",
                        "OhAe",
                        "Toommy",
                        "0-100",
                        "0-100",
                        "1300",
                        "0-100"});
            table1.AddRow(new string[] {
                        "3",
                        "Ice",
                        "Sak",
                        "0-1000",
                        "0-100",
                        "5640",
                        "0-200"});
            table1.AddRow(new string[] {
                        "4",
                        "Idea",
                        "Jigsaw",
                        "0-2000",
                        "0-1000",
                        "6790",
                        "0-500"});
            table1.AddRow(new string[] {
                        "5",
                        "Boy",
                        "Nat",
                        "0-100",
                        "0-50",
                        "1277",
                        "0-100"});
#line 8
testRunner.Given("Server has game status information", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[GetGameStatus]ระบบได้รับข้อมูล RoundID ถูกต้อง ระบบสามารถดึงข้อมูลสถานะของเกมได้" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetGameStatus")]
        public virtual void GetGameStatusระบบไดรบขอมลRoundIDถกตองระบบสามารถดงขอมลสถานะของเกมได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[GetGameStatus]ระบบได้รับข้อมูล RoundID ถูกต้อง ระบบสามารถดึงข้อมูลสถานะของเกมได้" +
                    "", new string[] {
                        "record_mock",
                        "record_mock"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given("The GetGameStatusExecutor has been created and initialized");
#line 19
testRunner.And("I sent RoundID \'1\' to get game status");
#line 20
testRunner.When("Call GetGameStatusExecutor()");
#line 21
testRunner.Then("GameStatus information should be as : RoundID\'1\' WinnerHightNameNormal\'Nayit\' Win" +
                    "nerLowNameNormal\'Nayit\' WinnerHightRange\'0-1000\' WinnerLowRange\'0-50\' Pot\'3900\' " +
                    "HandRange\'0-100\'");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[GetGameStatus]ระบบได้รับข้อมูล RoundID ที่ไม่มีใน datatbase ได้ข้อมูลเป็น null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetGameStatus")]
        public virtual void GetGameStatusระบบไดรบขอมลRoundIDทไมมในDatatbaseไดขอมลเปนNull()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[GetGameStatus]ระบบได้รับข้อมูล RoundID ที่ไม่มีใน datatbase ได้ข้อมูลเป็น null", new string[] {
                        "record_mock"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("The GetGameStatusExecutor has been created and initialized");
#line 26
testRunner.And("I sent RoundID \'9\' to get game status");
#line 27
testRunner.When("Call GetGameStatusExecutor()");
#line 28
testRunner.Then("GameStatus information should be null");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[GetGameStatus]ระบบได้รับข้อมูล RoundID ไม่ถูกต้อง")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "GetGameStatus")]
        public virtual void GetGameStatusระบบไดรบขอมลRoundIDไมถกตอง()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[GetGameStatus]ระบบได้รับข้อมูล RoundID ไม่ถูกต้อง", new string[] {
                        "record_mock"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("The GetGameStatusExecutor has been created and initialized");
#line 33
testRunner.And("I sent RoundID \'-1\' for get game status validation");
#line 34
testRunner.When("Call GetGameStatusExecutor() for validate input");
#line 35
testRunner.Then("GameStatus information should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
