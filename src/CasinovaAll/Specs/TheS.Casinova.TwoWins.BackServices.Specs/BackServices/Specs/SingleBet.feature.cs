// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.TwoWins.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SingleBetFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SingleBet.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SingleBet", "In order to only one betting\r\nAs a back server\r\nI want to be create bet informati" +
                    "on", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "NonRefundable",
                        "Refundable"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "463.61",
                        "200"});
            table1.AddRow(new string[] {
                        "Boy",
                        "0.99",
                        "0"});
            table1.AddRow(new string[] {
                        "Toommy",
                        "36.95",
                        "37"});
            table1.AddRow(new string[] {
                        "Au",
                        "234.00",
                        "326"});
            table1.AddRow(new string[] {
                        "Game",
                        "1",
                        "5"});
            table1.AddRow(new string[] {
                        "Khag",
                        "0.52",
                        "45"});
            table1.AddRow(new string[] {
                        "Ple",
                        "0.99",
                        "452"});
#line 8
testRunner.Given("(Twowins_SingleBet)server has player information as:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "FromDateTime",
                        "ThruDateTime",
                        "CriticalTime",
                        "Pot"});
            table2.AddRow(new string[] {
                        "1",
                        "-20",
                        "30",
                        "25",
                        "759.00"});
            table2.AddRow(new string[] {
                        "2",
                        "-5",
                        "5",
                        "-3",
                        "5266.00"});
            table2.AddRow(new string[] {
                        "3",
                        "-10",
                        "90",
                        "85",
                        "165.00"});
            table2.AddRow(new string[] {
                        "4",
                        "0",
                        "0",
                        "0",
                        "15648.00"});
#line 18
testRunner.And("(Twowins_SingleBet)server has round information as:", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวในช่วงเวลาปกติ โดยผู้เล่นมีชิฟพอและชิฟตาย" +
            "มากกว่าจำนวนเงินที่ลงพนัน ระบบบันทึกข้อมูลการลงพนัน, ประวัติการดำเนินการ และหักเ" +
            "ฉพาะชิฟตายของผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SingleBet")]
        public virtual void Twowins_SingleBetผเลนลงพนนมอเดยวในชวงเวลาปกตโดยผเลนมชฟพอและชฟตายมากกวาจำนวนเงนทลงพนนระบบบนทกขอมลการลงพนนประวตการดำเนนการและหกเฉพาะชฟตายของผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวในช่วงเวลาปกติ โดยผู้เล่นมีชิฟพอและชิฟตาย" +
                    "มากกว่าจำนวนเงินที่ลงพนัน ระบบบันทึกข้อมูลการลงพนัน, ประวัติการดำเนินการ และหักเ" +
                    "ฉพาะชิฟตายของผู้เล่น", new string[] {
                        "record_mock",
                        "record_mock"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
testRunner.Given("(Twowins_SingleBet)The SingleBetExecutor has been created and initialized");
#line 28
testRunner.And("(Twowins_SingleBet)sent name: \'OhAe\' the player\'s balance should recieved");
#line 29
testRunner.And("(Twowins_SingleBet)sent roundID: \'1\' the round information should recieved");
#line 30
testRunner.And("(Twowins_SingleBet)the round pot information should be update(RoundID: \'1\', Pot: " +
                    "\'769\')");
#line 31
testRunner.And("(Twowins_SingleBet)the player\'s balance should be update(UserName: \'OhAe\', BonusC" +
                    "hips: \'453.61\', Chips: \'200\')");
#line 32
testRunner.And("(Twowins_SingleBet)the action log information should be create (RoundID: \'1\', Use" +
                    "rName: \'OhAe\', ActionType: \'SingleBet\', Amount: \'10\', OldAmount: \'-1\', HandStatu" +
                    "s: \'Normal\', Change: \'false\'");
#line 33
testRunner.And("(Twowins_SingleBet)the bet information (RoundID: \'1\', UserName: \'OhAe\', BetTracki" +
                    "ngID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\', BonusChips: \'10\', Chips: \'0\', Hand" +
                    "Status: \'Normal\', CanChange: \'true\') should be create");
#line 34
testRunner.When("(Twowins_SingleBet)call SingleBetExecutor(RoundID: \'1\', UserName: \'OhAe\', Amount:" +
                    " \'10\', BetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\')");
#line 35
testRunner.Then("the result should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวในช่วงเวลาปกติ โดยผู้เล่นมีชิฟไม่พอ ระบบแ" +
            "จ้งเตือนผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SingleBet")]
        public virtual void Twowins_SingleBetผเลนลงพนนมอเดยวในชวงเวลาปกตโดยผเลนมชฟไมพอระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวในช่วงเวลาปกติ โดยผู้เล่นมีชิฟไม่พอ ระบบแ" +
                    "จ้งเตือนผู้เล่น", new string[] {
                        "record_mock"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
testRunner.Given("(Twowins_SingleBet)The SingleBetExecutor has been created and initialized");
#line 40
testRunner.And("(Twowins_SingleBet)sent name: \'Game\' the player\'s balance should recieved");
#line 41
testRunner.And("(Twowins_SingleBet)sent roundID: \'1\' the round information should recieved");
#line 42
testRunner.When("(Twowins_SingleBet)Expected exception and call SingleBetExecutor(RoundID: \'1\', Us" +
                    "erName: \'Game\', Amount: \'10\', BetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875" +
                    "C1\')");
#line 43
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวหลังจากเกมหมดเวลาแล้ว ระบบแจ้งเตือนผู้เล่" +
            "น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SingleBet")]
        public virtual void Twowins_SingleBetผเลนลงพนนมอเดยวหลงจากเกมหมดเวลาแลวระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวหลังจากเกมหมดเวลาแล้ว ระบบแจ้งเตือนผู้เล่" +
                    "น", new string[] {
                        "record_mock"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวก่อนเกมหมดเวลา ระบบแจ้งเตือนผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "SingleBet")]
        public virtual void Twowins_SingleBetผเลนลงพนนมอเดยวกอนเกมหมดเวลาระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(Twowins_SingleBet)ผู้เล่นลงพนันมือเดียวก่อนเกมหมดเวลา ระบบแจ้งเตือนผู้เล่น", new string[] {
                        "record_mock"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
