// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.TwoWins.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CalculateGameRoundWinnerFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CalculateGameRoundWinner.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CalculateGameRoundWinner", "In order to calculate winners\r\nAs a back server\r\nI want to be update game round w" +
                    "inner information", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "WinnerHiNorAmount",
                        "WinnerHiNorCount",
                        "WinnerLoNorAmount",
                        "WinnerLoNorCount",
                        "WinnerHiCriAmount",
                        "WinnerHiCriCount",
                        "WinnerLoCriAmount",
                        "WinnerLoCriCount"});
            table1.AddRow(new string[] {
                        "1",
                        "-1",
                        "1",
                        "-1",
                        "1",
                        "-1",
                        "1",
                        "-1",
                        "1"});
            table1.AddRow(new string[] {
                        "2",
                        "10",
                        "1",
                        "3",
                        "1",
                        "10",
                        "1",
                        "3",
                        "1"});
#line 8
testRunner.Given("(Twowins_CalculateGameRoundWinner)server has game round winner information as:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "HandID",
                        "RoundID",
                        "UserName",
                        "Amount",
                        "HandStatus",
                        "CanChange"});
            table2.AddRow(new string[] {
                        "1562",
                        "1",
                        "OhAe",
                        "12",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1542",
                        "1",
                        "OhAe",
                        "17",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1549",
                        "1",
                        "OhAe",
                        "7",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1604",
                        "1",
                        "OhAe",
                        "20",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1611",
                        "1",
                        "OhAe",
                        "25",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1662",
                        "1",
                        "Boy",
                        "23",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1642",
                        "1",
                        "Boy",
                        "17",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1649",
                        "1",
                        "Boy",
                        "7",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1704",
                        "1",
                        "Boy",
                        "2",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1711",
                        "1",
                        "Boy",
                        "28",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1562",
                        "2",
                        "OhAe",
                        "3",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1542",
                        "2",
                        "OhAe",
                        "10",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1549",
                        "2",
                        "OhAe",
                        "7",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1604",
                        "2",
                        "OhAe",
                        "2",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1611",
                        "2",
                        "OhAe",
                        "25",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1662",
                        "2",
                        "Boy",
                        "23",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1642",
                        "2",
                        "Boy",
                        "17",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1649",
                        "2",
                        "Boy",
                        "7",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1704",
                        "2",
                        "Boy",
                        "2",
                        "Normal",
                        "true"});
            table2.AddRow(new string[] {
                        "1711",
                        "2",
                        "Boy",
                        "28",
                        "Normal",
                        "true"});
#line 13
testRunner.And("(Twowins_CalculateGameRoundWinner)server has bet information as:", ((string)(null)), table2);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "FromDateTime",
                        "ThruDateTime",
                        "CriticalTime",
                        "Pot"});
            table3.AddRow(new string[] {
                        "1",
                        "-20",
                        "30",
                        "25",
                        "759.00"});
            table3.AddRow(new string[] {
                        "2",
                        "-5",
                        "5",
                        "-3",
                        "5266.00"});
            table3.AddRow(new string[] {
                        "3",
                        "10",
                        "20",
                        "15",
                        "15648.00"});
#line 36
testRunner.And("(Twowins_CalculateGameRoundWinner)server has round information as:", ((string)(null)), table3);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(Twowins_CalculateGameRoundWinner)ระบบคำนวณหาผู้ชนะ โดยโต๊ะเกมยังไม่มีผู้ชนะ และไ" +
            "ด้ผู้ชนะทั้งสี่ ระบบคำนวณหาผู้ชนะทั้งหมดและบันทึกข้อมูล")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CalculateGameRoundWinner")]
        public virtual void Twowins_CalculateGameRoundWinnerระบบคำนวณหาผชนะโดยโตะเกมยงไมมผชนะและไดผชนะทงสระบบคำนวณหาผชนะทงหมดและบนทกขอมล()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(Twowins_CalculateGameRoundWinner)ระบบคำนวณหาผู้ชนะ โดยโต๊ะเกมยังไม่มีผู้ชนะ และไ" +
                    "ด้ผู้ชนะทั้งสี่ ระบบคำนวณหาผู้ชนะทั้งหมดและบันทึกข้อมูล", new string[] {
                        "record_mock",
                        "record_mock"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
testRunner.Given("(Twowins_CalculateGameRoundWinner)The CalculateGameRoundWinnerExecutor has been c" +
                    "reated and initialized");
#line 45
testRunner.And("(Twowins_CalculateGameRoundWinner)sent RoundID: \'1\' the bet information should re" +
                    "cieved");
#line 46
testRunner.And("(Twowins_CalculateGameRoundWinner)sent RoundID: \'1\' the round winner information " +
                    "should recieved");
#line 47
testRunner.And("(Twowins_CalculateGameRoundWinner)sent roundID: \'1\' the round information should " +
                    "recieved");
#line 48
testRunner.And(@"(Twowins_CalculateGameRoundWinner)the round winner information should be update (RoundID ='1', WinnerHiNorAmount ='28', WinnerHiNorCount ='1', WinnerLoNorAmount ='2', WinnerLoNorCount ='1', WinnerHiCriAmount ='28', WinnerHiCriCount ='1', WinnerLoCriAmount ='2', WinnerLoCriCount ='1')");
#line 49
testRunner.When("(Twowins_CalculateGameRoundWinner)call CalculateGameRoundWinnerExecutor(RoundID: " +
                    "\'1\')");
#line 50
testRunner.Then("the result should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(Twowins_CalculateGameRoundWinner)ระบบคำนวณหาผู้ชนะ โดยโต๊ะเกมมีผู้ชนะแล้ว และได้" +
            "ผู้ชนะสูงสุดช่วงปกติและช่วงวิกฤตใหม่ ระบบคำนวณหาผู้ชนะทั้งหมดและบันทึกข้อมูล")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CalculateGameRoundWinner")]
        public virtual void Twowins_CalculateGameRoundWinnerระบบคำนวณหาผชนะโดยโตะเกมมผชนะแลวและไดผชนะสงสดชวงปกตและชวงวกฤตใหมระบบคำนวณหาผชนะทงหมดและบนทกขอมล()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(Twowins_CalculateGameRoundWinner)ระบบคำนวณหาผู้ชนะ โดยโต๊ะเกมมีผู้ชนะแล้ว และได้" +
                    "ผู้ชนะสูงสุดช่วงปกติและช่วงวิกฤตใหม่ ระบบคำนวณหาผู้ชนะทั้งหมดและบันทึกข้อมูล", new string[] {
                        "record_mock"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
testRunner.Given("(Twowins_CalculateGameRoundWinner)The CalculateGameRoundWinnerExecutor has been c" +
                    "reated and initialized");
#line 55
testRunner.And("(Twowins_CalculateGameRoundWinner)sent RoundID: \'2\' the bet information should re" +
                    "cieved");
#line 56
testRunner.And("(Twowins_CalculateGameRoundWinner)sent RoundID: \'2\' the round winner information " +
                    "should recieved");
#line 57
testRunner.And("(Twowins_CalculateGameRoundWinner)sent roundID: \'2\' the round information should " +
                    "recieved");
#line 58
testRunner.And(@"(Twowins_CalculateGameRoundWinner)the round winner information should be update (RoundID ='2', WinnerHiNorAmount ='28', WinnerHiNorCount ='1', WinnerLoNorAmount ='3', WinnerLoNorCount ='1', WinnerHiCriAmount ='28', WinnerHiCriCount ='1', WinnerLoCriAmount ='3', WinnerLoCriCount ='1')");
#line 59
testRunner.When("(Twowins_CalculateGameRoundWinner)call CalculateGameRoundWinnerExecutor(RoundID: " +
                    "\'2\')");
#line 60
testRunner.Then("the result should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(Twowins_CalculateGameRoundWinner)ระบบคำนวณหาผู้ชนะ โดยโต๊ะเกมยังไม่ได้เริ่มเล่น " +
            "ระบบแจ้งเตือน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CalculateGameRoundWinner")]
        public virtual void Twowins_CalculateGameRoundWinnerระบบคำนวณหาผชนะโดยโตะเกมยงไมไดเรมเลนระบบแจงเตอน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(Twowins_CalculateGameRoundWinner)ระบบคำนวณหาผู้ชนะ โดยโต๊ะเกมยังไม่ได้เริ่มเล่น " +
                    "ระบบแจ้งเตือน", new string[] {
                        "record_mock"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
testRunner.Given("(Twowins_CalculateGameRoundWinner)The CalculateGameRoundWinnerExecutor has been c" +
                    "reated and initialized");
#line 65
testRunner.And("(Twowins_CalculateGameRoundWinner)sent RoundID: \'3\' the bet information should re" +
                    "cieved");
#line 66
testRunner.And("(Twowins_CalculateGameRoundWinner)sent RoundID: \'3\' the round winner information " +
                    "should recieved");
#line 67
testRunner.And("(Twowins_CalculateGameRoundWinner)sent roundID: \'3\' the round information should " +
                    "recieved");
#line 68
testRunner.When("(Twowins_CalculateGameRoundWinner)Expected exception and call CalculateGameRoundW" +
                    "innerExecutor(RoundID: \'3\')");
#line 69
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
