// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.TwoWins.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ChangeBetFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChangeBet.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ChangeBet", "In order to change bet information\r\nAs a back server\r\nI want to be increase bet v" +
                    "alue", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "NonRefundable",
                        "Refundable"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "20",
                        "200"});
            table1.AddRow(new string[] {
                        "Boy",
                        "0.99",
                        "0"});
            table1.AddRow(new string[] {
                        "Toommy",
                        "36.95",
                        "37"});
            table1.AddRow(new string[] {
                        "Au",
                        "234.00",
                        "326"});
            table1.AddRow(new string[] {
                        "Game",
                        "1",
                        "5"});
            table1.AddRow(new string[] {
                        "Khag",
                        "0.52",
                        "45"});
            table1.AddRow(new string[] {
                        "Ple",
                        "0.99",
                        "452"});
#line 8
testRunner.Given("(Twowins_ChangeBet)server has player information as:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "FromDateTime",
                        "ThruDateTime",
                        "CriticalTime",
                        "Pot"});
            table2.AddRow(new string[] {
                        "1",
                        "-20",
                        "30",
                        "25",
                        "759.00"});
            table2.AddRow(new string[] {
                        "2",
                        "-5",
                        "5",
                        "-3",
                        "5266.00"});
            table2.AddRow(new string[] {
                        "3",
                        "-10",
                        "90",
                        "85",
                        "165.00"});
            table2.AddRow(new string[] {
                        "4",
                        "0",
                        "0",
                        "0",
                        "15648.00"});
#line 18
testRunner.And("(Twowins_ChangeBet)server has round information as:", ((string)(null)), table2);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "UserName",
                        "BonusChips",
                        "Chips",
                        "Amount",
                        "HandID",
                        "HandStatus",
                        "CanChange"});
            table3.AddRow(new string[] {
                        "1",
                        "OhAe",
                        "123",
                        "0",
                        "123",
                        "1562",
                        "Normal",
                        "true"});
            table3.AddRow(new string[] {
                        "1",
                        "OhAe",
                        "12",
                        "5",
                        "15",
                        "1542",
                        "Normal",
                        "true"});
            table3.AddRow(new string[] {
                        "1",
                        "OhAe",
                        "0",
                        "7",
                        "7",
                        "1549",
                        "Normal",
                        "true"});
            table3.AddRow(new string[] {
                        "1",
                        "OhAe",
                        "0",
                        "20",
                        "20",
                        "1604",
                        "Critical",
                        "true"});
            table3.AddRow(new string[] {
                        "1",
                        "OhAe",
                        "0",
                        "25",
                        "25",
                        "1611",
                        "Critical",
                        "false"});
#line 25
testRunner.And("(Twowins_ChangeBet)server has bet information as:", ((string)(null)), table3);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"(Twowins_ChangeBet)ผู้เล่นเพิ่มเงินพนันในข้อมูลลงพนันเดิมในช่วงเวลาปกติของโต๊ะเกม โดยระบุชิฟที่เพิ่มมากกว่าเดิม ผู้เล่นมีชิฟตายพอ และข้อมูลลงพนันยังสามารถแก้ไขได้, ระบบบันทึกข้อมูลการแก้ไข บันทึกประวัติการดำเนินการ หักชิฟผู้เล่นเพิ่ม และอัพเดทเงินกองกลางของโต๊ะเกมและข้อมูลการลงพนันเดิม")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ChangeBet")]
        public virtual void Twowins_ChangeBetผเลนเพมเงนพนนในขอมลลงพนนเดมในชวงเวลาปกตของโตะเกมโดยระบชฟทเพมมากกวาเดมผเลนมชฟตายพอและขอมลลงพนนยงสามารถแกไขไดระบบบนทกขอมลการแกไขบนทกประวตการดำเนนการหกชฟผเลนเพมและอพเดทเงนกองกลางของโตะเกมและขอมลการลงพนนเดม()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"(Twowins_ChangeBet)ผู้เล่นเพิ่มเงินพนันในข้อมูลลงพนันเดิมในช่วงเวลาปกติของโต๊ะเกม โดยระบุชิฟที่เพิ่มมากกว่าเดิม ผู้เล่นมีชิฟตายพอ และข้อมูลลงพนันยังสามารถแก้ไขได้, ระบบบันทึกข้อมูลการแก้ไข บันทึกประวัติการดำเนินการ หักชิฟผู้เล่นเพิ่ม และอัพเดทเงินกองกลางของโต๊ะเกมและข้อมูลการลงพนันเดิม", new string[] {
                        "record_mock",
                        "record_mock"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
testRunner.Given("(Twowins_ChangeBet)The ChangeBetExecutor has been created and initialized");
#line 36
testRunner.And("(Twowins_ChangeBet)sent name: \'OhAe\' the player\'s balance should recieved");
#line 37
testRunner.And("(Twowins_ChangeBet)sent roundID: \'1\' the round information should recieved");
#line 38
testRunner.And("(Twowins_ChangeBet)sent handID: \'1542\' the round information should recieved");
#line 39
testRunner.And("(Twowins_ChangeBet)the round pot information should be update(RoundID: \'1\', Pot: " +
                    "\'764\')");
#line 40
testRunner.And("(Twowins_ChangeBet)the action log information should be create (RoundID: \'1\', Use" +
                    "rName: \'OhAe\', ActionType: \'ChangeBet\', Amount: \'20\', OldAmount: \'15\', HandStatu" +
                    "s: \'Normal\', CanChange: \'true\'");
#line 41
testRunner.And("(Twowins_ChangeBet)the player\'s balance should be update(UserName: \'OhAe\', BonusC" +
                    "hips: \'15\', Chips: \'200\')");
#line 42
testRunner.And("(Twowins_ChangeBet)the bet information should be update(RoundID: \'1\', UserName: \'" +
                    "OhAe\', BetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\', BonusChips: \'17\', " +
                    "Chips: \'5\', HandStatus: \'Normal\', CanChange: \'true\')");
#line 43
testRunner.When("(Twowins_ChangeBet)call ChangeBetExecutor(UserName: \'OhAe\', HandID: \'1542\', Amoun" +
                    "t: \'20\', RoundID: \'1\', BetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\')");
#line 44
testRunner.Then("the result should be change");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
