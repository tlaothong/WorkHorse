// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerAccount.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListPlayerAccountFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListPlayerAccountFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListPlayerAccount", "In order to list player account\r\nAs a system\r\nI want to list player account", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlayerAccountID",
                        "UserName",
                        "AccountType",
                        "AccountNo",
                        "CVV",
                        "ExpireDate",
                        "Active"});
            table1.AddRow(new string[] {
                        "Primary",
                        "OhAe",
                        "Visa",
                        "1802345673888921",
                        "0253",
                        "10/31/2010",
                        "True"});
            table1.AddRow(new string[] {
                        "Primary",
                        "Boy",
                        "Master\tCard",
                        "0019342567188211",
                        "4830",
                        "11/30/2010",
                        "True"});
            table1.AddRow(new string[] {
                        "Primary",
                        "Nit",
                        "Visa",
                        "0012214544543212",
                        "3223",
                        "12/31/2010",
                        "True"});
#line 8
testRunner.Given("Server has player account information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบได้รับข้อมูล username ถูกต้อง ระบบสามารถดึงข้อมูลบัญชีของผู้เล่นได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListPlayerAccount")]
        public virtual void ระบบไดรบขอมลUsernameถกตองระบบสามารถดงขอมลบญชของผเลนได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบได้รับข้อมูล username ถูกต้อง ระบบสามารถดึงข้อมูลบัญชีของผู้เล่นได้", new string[] {
                        "record_mock",
                        "record_mock"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("The ListPlayerAccountExecutor has been created and initialized");
#line 17
testRunner.And("Sent UserName \'Nit\'");
#line 18
testRunner.When("Call ListPlayerAccountExecutor");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlayerAccountID",
                        "UserName",
                        "AccountType",
                        "AccountNo",
                        "CVV",
                        "ExpireDate",
                        "Active"});
            table2.AddRow(new string[] {
                        "003",
                        "Nit",
                        "Visa",
                        "0012214544543212",
                        "3223",
                        "12/31/2010",
                        "True"});
#line 19
testRunner.Then("The result of player account should be as:", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบได้รับข้อมูล username ที่ไม่มีใน server ระบบไม่สามารถดึงข้อมูลบัญชีของผู้เล่น" +
            "ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListPlayerAccount")]
        public virtual void ระบบไดรบขอมลUsernameทไมมในServerระบบไมสามารถดงขอมลบญชของผเลนได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบได้รับข้อมูล username ที่ไม่มีใน server ระบบไม่สามารถดึงข้อมูลบัญชีของผู้เล่น" +
                    "ได้", new string[] {
                        "record_mock"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("The ListPlayerAccountExecutor has been created and initialized");
#line 26
testRunner.And("Sent UserName \'Meaw\'");
#line 27
testRunner.When("Call ListPlayerAccountExecutor");
#line 28
testRunner.Then("The result of player account should be null");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบไม่ได้รับข้อมูล username ระบบไม่สามารถดึงข้อมูลบัญชีของผู้เล่นได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListPlayerAccount")]
        public virtual void ระบบไมไดรบขอมลUsernameระบบไมสามารถดงขอมลบญชของผเลนได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบไม่ได้รับข้อมูล username ระบบไม่สามารถดึงข้อมูลบัญชีของผู้เล่นได้", new string[] {
                        "record_mock"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("The ListPlayerAccountExecutor has been created and initialized");
#line 33
testRunner.And("Sent UserName \'\'");
#line 34
testRunner.When("Call ListPlayerAccountExecutor");
#line 35
testRunner.Then("The result of player account should be null");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
