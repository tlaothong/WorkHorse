// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.DevilSix.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListBetLogFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListBetLogFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListBetLog", "In order to ให้ client นำข้อมูลไปแสดงที่ UI เพื่อให้ผู้เล่นทราบถึงผลการเล่นที่กดเ" +
                    "ล่นได้แต่ละครั้ง\r\nAs a User\r\nI want to ดึงข้อมูลค่า bet log", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListBetLog]ระบบได้รับข้อมูล UserName และ RoundID ถูกต้อง ระบบสามารถลีสต์ข้อมูล B" +
            "et log ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ListBetLogระบบไดรบขอมลUserNameและRoundIDถกตองระบบสามารถลสตขอมลBetLogได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListBetLog]ระบบได้รับข้อมูล UserName และ RoundID ถูกต้อง ระบบสามารถลีสต์ข้อมูล B" +
                    "et log ได้", new string[] {
                        "record_mock"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "BetDateTime",
                        "BetOrder",
                        "BetTrackingID"});
            table1.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:00",
                        "1",
                        "03D51BC1-1656-454B-8CB2-4202BA8C21D7"});
            table1.AddRow(new string[] {
                        "Boy",
                        "1",
                        "10:05",
                        "6",
                        "09630A4D-0B6C-4672-95F0-0AE5E48614FD"});
            table1.AddRow(new string[] {
                        "Boy",
                        "1",
                        "10:10",
                        "7",
                        "2ED52C48-5C9A-471B-9335-DDAE19F44BE6"});
            table1.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:15",
                        "2",
                        "833278AF-A221-4916-90CD-96951051F40F"});
#line 9
testRunner.Given("server has BetLog information as:", ((string)(null)), table1);
#line 15
testRunner.And("Sent UserName\'Nit\', RoundID \'1\' for test function");
#line 16
testRunner.When("Call ListBetLogExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "BetDateTime",
                        "BetOrder",
                        "BetTrackingID"});
            table2.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:00",
                        "1",
                        "03D51BC1-1656-454B-8CB2-4202BA8C21D7"});
            table2.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:15",
                        "2",
                        "833278AF-A221-4916-90CD-96951051F40F"});
#line 17
testRunner.Then("The result of BetLog should be :", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListBetLog]ระบบได้รับ RoundID ที่ยังไม่มีบันทึกการลงเดิมพันของผู้เล่นใน database" +
            " ได้ข้อมูล Bet log เป็น null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ListBetLogระบบไดรบRoundIDทยงไมมบนทกการลงเดมพนของผเลนในDatabaseไดขอมลBetLogเปนNull()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListBetLog]ระบบได้รับ RoundID ที่ยังไม่มีบันทึกการลงเดิมพันของผู้เล่นใน database" +
                    " ได้ข้อมูล Bet log เป็น null", new string[] {
                        "record_mock"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "BetDateTime",
                        "BetOrder",
                        "BetTrackingID"});
            table3.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:00",
                        "1",
                        "03D51BC1-1656-454B-8CB2-4202BA8C21D7"});
            table3.AddRow(new string[] {
                        "Boy",
                        "1",
                        "10:05",
                        "6",
                        "09630A4D-0B6C-4672-95F0-0AE5E48614FD"});
            table3.AddRow(new string[] {
                        "Boy",
                        "1",
                        "10:10",
                        "7",
                        "2ED52C48-5C9A-471B-9335-DDAE19F44BE6"});
            table3.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:15",
                        "2",
                        "833278AF-A221-4916-90CD-96951051F40F"});
#line 25
testRunner.Given("server has BetLog information as:", ((string)(null)), table3);
#line 31
testRunner.And("Sent UserName\'nit\', RoundID \'2\' for test function");
#line 32
testRunner.When("Call ListBetLogExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "BetDateTime",
                        "BetOrder",
                        "BetTrackingID"});
#line 33
testRunner.Then("The result of BetLog should be :", ((string)(null)), table4);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListBetLog]ระบบได้รับ UserName ที่ยังไม่มีบันทึกการลงเดิมพันของผู้เล่นใน databas" +
            "e ได้ข้อมูล Bet log เป็น null")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ListBetLogระบบไดรบUserNameทยงไมมบนทกการลงเดมพนของผเลนในDatabaseไดขอมลBetLogเปนNull()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListBetLog]ระบบได้รับ UserName ที่ยังไม่มีบันทึกการลงเดิมพันของผู้เล่นใน databas" +
                    "e ได้ข้อมูล Bet log เป็น null", new string[] {
                        "record_mock"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "BetDateTime",
                        "BetOrder",
                        "BetTrackingID"});
            table5.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:00",
                        "1",
                        "03D51BC1-1656-454B-8CB2-4202BA8C21D7"});
            table5.AddRow(new string[] {
                        "Boy",
                        "1",
                        "10:05",
                        "6",
                        "09630A4D-0B6C-4672-95F0-0AE5E48614FD"});
            table5.AddRow(new string[] {
                        "Boy",
                        "1",
                        "10:10",
                        "7",
                        "2ED52C48-5C9A-471B-9335-DDAE19F44BE6"});
            table5.AddRow(new string[] {
                        "Nit",
                        "1",
                        "10:15",
                        "2",
                        "833278AF-A221-4916-90CD-96951051F40F"});
#line 40
testRunner.Given("server has BetLog information as:", ((string)(null)), table5);
#line 46
testRunner.And("Sent UserName\'Ae\', RoundID \'1\' for test function");
#line 47
testRunner.When("Call ListBetLogExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "BetDateTime",
                        "BetOrder",
                        "BetTrackingID"});
#line 48
testRunner.Then("The result of BetLog should be :", ((string)(null)), table6);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListBetLog]ระบบได้รับ UserName ไม่ถูกต้อง ระบบไม่สามารถลีสต์ข้อมูล Bet log ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ListBetLogระบบไดรบUserNameไมถกตองระบบไมสามารถลสตขอมลBetLogได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListBetLog]ระบบได้รับ UserName ไม่ถูกต้อง ระบบไม่สามารถลีสต์ข้อมูล Bet log ได้", new string[] {
                        "record_mock"});
#line 52
this.ScenarioSetup(scenarioInfo);
#line 53
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line 54
testRunner.And("Sent UserName\'\', RoundID \'1\' for validate");
#line 55
testRunner.When("Call ListBetLogExecutor() for validate input information");
#line 56
testRunner.Then("The result of BetLog should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListBetLog]ระบบได้รับ RoundID ไม่ถูกต้อง ระบบไม่สามารถลีสต์ข้อมูล Bet log ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ListBetLogระบบไดรบRoundIDไมถกตองระบบไมสามารถลสตขอมลBetLogได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListBetLog]ระบบได้รับ RoundID ไม่ถูกต้อง ระบบไม่สามารถลีสต์ข้อมูล Bet log ได้", new string[] {
                        "record_mock"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line 61
testRunner.And("Sent UserName\'Nit\', RoundID \'-1\' for validate");
#line 62
testRunner.When("Call ListBetLogExecutor() for validate input information");
#line 63
testRunner.Then("The result of BetLog should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListBetLog]ระบบได้รับ UserName และ RoundID  ไม่ถูกต้อง ระบบไม่สามารถลีสต์ข้อมูล " +
            "Bet log ได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ListBetLogระบบไดรบUserNameและRoundIDไมถกตองระบบไมสามารถลสตขอมลBetLogได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListBetLog]ระบบได้รับ UserName และ RoundID  ไม่ถูกต้อง ระบบไม่สามารถลีสต์ข้อมูล " +
                    "Bet log ได้", new string[] {
                        "record_mock"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line 68
testRunner.And("Sent UserName\'\', RoundID \'-1\' for validate");
#line 69
testRunner.When("Call ListBetLogExecutor() for validate input information");
#line 70
testRunner.Then("The result of BetLog should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
