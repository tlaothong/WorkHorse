// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.DevilSix.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListRangeActionLogFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListRangeActionLogFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListRangeActionLog", "In order to ให้ผู้เล่นสามารถตรวจสอบได้ว่าในช่วงวันที่ผู้เล่นเลือกมีผู้เล่นที่ชนะจ" +
                    "ริง ๆ\r\nAs a User\r\nI want ดึงข้อมูลรายละเอียดการชนะของผู้เล่นทั้งหมดในแต่ละวันที่" +
                    "ผู้เล่นทำการเลือก", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "UserName",
                        "Amount",
                        "BetOrder",
                        "BetDateTime"});
            table1.AddRow(new string[] {
                        "1",
                        "Nayit",
                        "1",
                        "1",
                        "10:54 12/13/2010"});
            table1.AddRow(new string[] {
                        "2",
                        "Nayit",
                        "5",
                        "5",
                        "10:58 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Nayit",
                        "2",
                        "3",
                        "11:02 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Kob",
                        "1",
                        "4",
                        "11:14 12/13/2010"});
            table1.AddRow(new string[] {
                        "2",
                        "Eye",
                        "1",
                        "6",
                        "11:20 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Krai",
                        "1",
                        "5",
                        "11:21 12/13/2010"});
            table1.AddRow(new string[] {
                        "2",
                        "Jae",
                        "20",
                        "26",
                        "11:29 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Sak",
                        "1",
                        "6",
                        "11:30 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Sak",
                        "1",
                        "7",
                        "11:31 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "nayit",
                        "1",
                        "1",
                        "11:32 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Sak",
                        "2",
                        "3",
                        "11:33 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Sak",
                        "2",
                        "5",
                        "11:34 12/13/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "nit",
                        "2",
                        "7",
                        "11:35 12/13/2010"});
            table1.AddRow(new string[] {
                        "2",
                        "May",
                        "20",
                        "46",
                        "11:29 12/14/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Au",
                        "1",
                        "1",
                        "11:30 12/14/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Kay",
                        "2",
                        "3",
                        "11:31 12/14/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Amz",
                        "2",
                        "5",
                        "11:32 12/14/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Sak",
                        "1",
                        "6",
                        "11:33 12/15/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Sak",
                        "2",
                        "8",
                        "11:34 12/15/2010"});
            table1.AddRow(new string[] {
                        "1",
                        "Pry",
                        "2",
                        "2",
                        "11:35 12/16/2010"});
#line 9
testRunner.Given("Server has range action log information", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "WinnerPoint"});
            table2.AddRow(new string[] {
                        "1",
                        "6"});
            table2.AddRow(new string[] {
                        "2",
                        "66"});
            table2.AddRow(new string[] {
                        "3",
                        "666"});
            table2.AddRow(new string[] {
                        "4",
                        "6666"});
#line 32
testRunner.And("Range action log get winnerpoint from game round information", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListRangeActionLog] ระบบได้รับข้อมูลการขอดูสถิติผู้ชนะ ระบบทำการตรวจสอบข้อมูล ข้" +
            "อมูลถูกต้อง ระบบสามารถดึงข้อมูลสถิติการชนะของผู้เล่นทั้งหมดในช่วงวันที่ที่เลือกด" +
            "ูได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListRangeActionLog")]
        public virtual void ListRangeActionLogระบบไดรบขอมลการขอดสถตผชนะระบบทำการตรวจสอบขอมลขอมลถกตองระบบสามารถดงขอมลสถตการชนะของผเลนทงหมดในชวงวนททเลอกดได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListRangeActionLog] ระบบได้รับข้อมูลการขอดูสถิติผู้ชนะ ระบบทำการตรวจสอบข้อมูล ข้" +
                    "อมูลถูกต้อง ระบบสามารถดึงข้อมูลสถิติการชนะของผู้เล่นทั้งหมดในช่วงวันที่ที่เลือกด" +
                    "ูได้", new string[] {
                        "record_mock",
                        "record_mock"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 41
testRunner.Given("The ListRangeActionLogInfoExecutor has been created and initialized");
#line 42
testRunner.And("Sent RoundID\'1\' FromDateTime\'12/13/2010\' ThruDateTime\'12/15/2010\' the Range actio" +
                    "n log should recieved");
#line 43
testRunner.And("Sent RoundID\'1\' FromDateTime\'12/13/2010\' ThruDateTime\'12/15/2010\'");
#line 44
testRunner.When("Call ListRangeActionLogInfoExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "UserName",
                        "Amount",
                        "BetOrder",
                        "BetDateTime"});
            table3.AddRow(new string[] {
                        "1",
                        "Sak",
                        "1",
                        "7",
                        "11:31 12/13/2010"});
            table3.AddRow(new string[] {
                        "1",
                        "nit",
                        "2",
                        "7",
                        "11:35 12/13/2010"});
            table3.AddRow(new string[] {
                        "1",
                        "Sak",
                        "2",
                        "8",
                        "11:34 12/15/2010"});
#line 45
testRunner.Then("Range action log result should be as:", ((string)(null)), table3);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
