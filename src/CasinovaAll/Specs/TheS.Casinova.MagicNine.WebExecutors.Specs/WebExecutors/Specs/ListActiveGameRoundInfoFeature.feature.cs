// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.MagicNine.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListActiveGameRoundInfoFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListActiveGameRoundInfoFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListActiveGameRoundInfo", "In order to list active game round information\r\nAs a system\r\nI want to list activ" +
                    "e game round", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบมีข้อมูลโต๊ะเกมที่เปิดใช้งานอยู่ 4 โต๊ะ, ระบบดึงข้อมูลโต๊ะเกมทั้งหมดที่เปิดใช" +
            "้งาน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListActiveGameRoundInfo")]
        public virtual void ระบบมขอมลโตะเกมทเปดใชงานอย4โตะระบบดงขอมลโตะเกมทงหมดทเปดใชงาน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบมีข้อมูลโต๊ะเกมที่เปิดใช้งานอยู่ 4 โต๊ะ, ระบบดึงข้อมูลโต๊ะเกมทั้งหมดที่เปิดใช" +
                    "้งาน", new string[] {
                        "record_mock"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
testRunner.Given("The ListActiveGameRoundInfoExecutor has been created and initialized");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "WinnerPoint",
                        "Active"});
            table1.AddRow(new string[] {
                        "1",
                        "9",
                        "True"});
            table1.AddRow(new string[] {
                        "2",
                        "99",
                        "True"});
            table1.AddRow(new string[] {
                        "3",
                        "999",
                        "True"});
            table1.AddRow(new string[] {
                        "4",
                        "9999",
                        "True"});
#line 9
testRunner.And("server has 4 game round information  in data", ((string)(null)), table1);
#line 16
testRunner.When("call ListActiveGameRoundInfoExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "WinnerPoint",
                        "Active"});
            table2.AddRow(new string[] {
                        "1",
                        "9",
                        "True"});
            table2.AddRow(new string[] {
                        "2",
                        "99",
                        "True"});
            table2.AddRow(new string[] {
                        "3",
                        "999",
                        "True"});
            table2.AddRow(new string[] {
                        "4",
                        "9999",
                        "True"});
#line 17
testRunner.Then("the result should be as:", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบมีข้อมูลโต๊ะเกมที่เปิดใช้งานอยู่ 2 โต๊ะ, ระบบดึงข้อมูลโต๊ะเกมทั้งหมดที่เปิดใช" +
            "้งาน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListActiveGameRoundInfo")]
        public virtual void ระบบมขอมลโตะเกมทเปดใชงานอย2โตะระบบดงขอมลโตะเกมทงหมดทเปดใชงาน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบมีข้อมูลโต๊ะเกมที่เปิดใช้งานอยู่ 2 โต๊ะ, ระบบดึงข้อมูลโต๊ะเกมทั้งหมดที่เปิดใช" +
                    "้งาน", new string[] {
                        "record_mock"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
testRunner.Given("The ListActiveGameRoundInfoExecutor has been created and initialized");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "WinnerPoint",
                        "Active"});
            table3.AddRow(new string[] {
                        "1",
                        "9",
                        "False"});
            table3.AddRow(new string[] {
                        "2",
                        "99",
                        "True"});
            table3.AddRow(new string[] {
                        "3",
                        "999",
                        "True"});
            table3.AddRow(new string[] {
                        "4",
                        "9999",
                        "False"});
#line 28
testRunner.And("server has 4 game round information  in data", ((string)(null)), table3);
#line 35
testRunner.When("call ListActiveGameRoundInfoExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "WinnerPoint",
                        "Active"});
            table4.AddRow(new string[] {
                        "2",
                        "99",
                        "True"});
            table4.AddRow(new string[] {
                        "3",
                        "999",
                        "True"});
#line 36
testRunner.Then("the result should be as:", ((string)(null)), table4);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ระบบไม่มีข้อมูลโต๊ะเกมที่เปิดใช้งานอยู่")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListActiveGameRoundInfo")]
        public virtual void ระบบไมมขอมลโตะเกมทเปดใชงานอย()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ระบบไม่มีข้อมูลโต๊ะเกมที่เปิดใช้งานอยู่", new string[] {
                        "record_mock"});
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
testRunner.Given("The ListActiveGameRoundInfoExecutor has been created and initialized");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "WinnerPoint",
                        "Active"});
            table5.AddRow(new string[] {
                        "1",
                        "9",
                        "False"});
            table5.AddRow(new string[] {
                        "2",
                        "99",
                        "False"});
            table5.AddRow(new string[] {
                        "3",
                        "999",
                        "False"});
            table5.AddRow(new string[] {
                        "4",
                        "9999",
                        "False"});
#line 44
testRunner.And("server has 4 game round information  in data", ((string)(null)), table5);
#line 51
testRunner.When("call ListActiveGameRoundInfoExecutor()");
#line 52
testRunner.Then("the result should be null");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
