// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerProfile.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class VeriflyUserFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "VeriflyUser.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "VeriflyUser", "In order to verifly registered user\r\nAs a back server\r\nI want to be activate regi" +
                    "stered user", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "VerifyCode"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "A2SK"});
            table1.AddRow(new string[] {
                        "Boy",
                        "3DS1"});
            table1.AddRow(new string[] {
                        "Nit",
                        "KD21"});
            table1.AddRow(new string[] {
                        "Au",
                        "UY8I"});
#line 7
testRunner.Given("(VerifyUser) server has user profile information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(VerifyUser)ผู้เล่นยืนยันการสมัคร, รหัสยืนยันถูกต้อง, ระบบเปิดการใช้งานให้ผู้เล่น" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "VeriflyUser")]
        public virtual void VerifyUserผเลนยนยนการสมครรหสยนยนถกตองระบบเปดการใชงานใหผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(VerifyUser)ผู้เล่นยืนยันการสมัคร, รหัสยืนยันถูกต้อง, ระบบเปิดการใช้งานให้ผู้เล่น" +
                    "", new string[] {
                        "record_mock"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("The VeriflyUserExecutor has been created and initialized");
#line 17
testRunner.And("sent name: \'OhAe\' the player profile should recieved");
#line 18
testRunner.And("the user profile(UserName: \'OhAe\') should be activate");
#line 19
testRunner.When("call VeriflyUserExecutor(UserName: \'OhAe\', VeriflyCode: \'A2SK\')");
#line 20
testRunner.Then("the result should be update");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(VerifyUser)ผู้เล่นยืนยันการสมัคร, รหัสยืนยันไม่ถูกต้อง, ระบบแจ้งเตือนผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "VeriflyUser")]
        public virtual void VerifyUserผเลนยนยนการสมครรหสยนยนไมถกตองระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(VerifyUser)ผู้เล่นยืนยันการสมัคร, รหัสยืนยันไม่ถูกต้อง, ระบบแจ้งเตือนผู้เล่น", new string[] {
                        "record_mock"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
testRunner.Given("The VeriflyUserExecutor has been created and initialized");
#line 25
testRunner.And("sent name: \'Au\' the player profile should recieved");
#line 26
testRunner.When("Expected exception and call VeriflyUserExecutor(UserName: \'Au\', VeriflyCode: \'XXX" +
                    "X\')");
#line 27
testRunner.Then("the server should throw an error");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(VerifyUser)ผู้เล่นยืนยันการสมัคร, ไม่มีผู้เล่นนี้ในระบบ, ระบบแจ้งเตือนผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "VeriflyUser")]
        public virtual void VerifyUserผเลนยนยนการสมครไมมผเลนนในระบบระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(VerifyUser)ผู้เล่นยืนยันการสมัคร, ไม่มีผู้เล่นนี้ในระบบ, ระบบแจ้งเตือนผู้เล่น", new string[] {
                        "record_mock"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given("The VeriflyUserExecutor has been created and initialized");
#line 32
testRunner.And("sent name: \'Game\' the player profile should recieved");
#line 33
testRunner.When("Expected exception and call VeriflyUserExecutor(UserName: \'Game\', VeriflyCode: \'X" +
                    "XXX\')");
#line 34
testRunner.Then("the server should throw an error");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
