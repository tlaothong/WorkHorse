// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerProfile.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ChangeEmailFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ChangeEmail.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ChangeEmail", "In order to change e-mail\r\nAs a back server\r\nI want to be update new e-mail", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "Password",
                        "E-mail"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "aaaa",
                        "aaa@aaa.com"});
            table1.AddRow(new string[] {
                        "Boy",
                        "bbbb",
                        "bbb@bbb.com"});
            table1.AddRow(new string[] {
                        "Nittaya",
                        "cccc",
                        "ccc@ccc.com"});
            table1.AddRow(new string[] {
                        "Au",
                        "dddd",
                        "ddd@ddd.com"});
#line 7
testRunner.Given("(ChangeEmail)server has user profile information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุรหัสผ่านถูกต้อง อีเมลล์เดิมถูกต้" +
            "อง และอีเมลล์ใหม่ยังไม่เคยถูกใช้, ระบบบันทึกข้อมูลอีเมลล์ใหม่")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ChangeEmail")]
        public virtual void ChangeEmailผเลนตองการเปลยนอเมลลโดยระบรหสผานถกตองอเมลลเดมถกตองและอเมลลใหมยงไมเคยถกใชระบบบนทกขอมลอเมลลใหม()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุรหัสผ่านถูกต้อง อีเมลล์เดิมถูกต้" +
                    "อง และอีเมลล์ใหม่ยังไม่เคยถูกใช้, ระบบบันทึกข้อมูลอีเมลล์ใหม่", new string[] {
                        "record_mock"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("The ChangeEmail has been created and initialized");
#line 17
testRunner.And("the player profile should be recieved(UserName: \'OhAe\')");
#line 18
testRunner.And("the new email should be unique(NewE-mail: \'a@a.com\')");
#line 19
testRunner.And("the user profile should be update(UserName: \'OhAe\', NewE-mail: \'a@a.com\')");
#line 20
testRunner.When("call ChangeEmailExecutor(UserName: \'OhAe\', Password: \'aaaa\', OldE-mail: \'aaa@aaa." +
                    "com\', NewE-mail: \'a@a.com\')");
#line 21
testRunner.Then("the e-mail should be update");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุรหัสผ่านไม่ถูกต้อง ระบบแจ้งเตือน" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ChangeEmail")]
        public virtual void ChangeEmailผเลนตองการเปลยนอเมลลโดยระบรหสผานไมถกตองระบบแจงเตอน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุรหัสผ่านไม่ถูกต้อง ระบบแจ้งเตือน" +
                    "", new string[] {
                        "record_mock"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("The ChangeEmail has been created and initialized");
#line 26
testRunner.And("the player profile should be recieved(UserName: \'OhAe\')");
#line 27
testRunner.When("Expected exception and call ChangeEmailExecutor(UserName: \'OhAe\', Password: \'xxxx" +
                    "\', OldE-mail: \'aaa@aaa.com\', NewE-mail: \'a@a.com\')");
#line 28
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุเดิมไม่ถูกต้อง ระบบแจ้งเตือน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ChangeEmail")]
        public virtual void ChangeEmailผเลนตองการเปลยนอเมลลโดยระบเดมไมถกตองระบบแจงเตอน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุเดิมไม่ถูกต้อง ระบบแจ้งเตือน", new string[] {
                        "record_mock"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("The ChangeEmail has been created and initialized");
#line 33
testRunner.And("the player profile should be recieved(UserName: \'OhAe\')");
#line 34
testRunner.When("Expected exception and call ChangeEmailExecutor(UserName: \'OhAe\', Password: \'aaaa" +
                    "\', OldE-mail: \'xxx@xxx.com\', NewE-mail: \'a@a.com\')");
#line 35
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุอีเมลล์ใหม่ที่ถูกใช้แล้ว ระบบแจ้" +
            "งเตือน")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ChangeEmail")]
        public virtual void ChangeEmailผเลนตองการเปลยนอเมลลโดยระบอเมลลใหมทถกใชแลวระบบแจงเตอน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(ChangeEmail)ผู้เล่นต้องการเปลี่ยนอีเมลล์ โดยระบุอีเมลล์ใหม่ที่ถูกใช้แล้ว ระบบแจ้" +
                    "งเตือน", new string[] {
                        "record_mock"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
testRunner.Given("The ChangeEmail has been created and initialized");
#line 40
testRunner.And("the player profile should be recieved(UserName: \'OhAe\')");
#line 41
testRunner.And("the new email should be unique(NewE-mail: \'aaa@aaa.com\')");
#line 42
testRunner.When("Expected exception and call ChangeEmailExecutor(UserName: \'OhAe\', Password: \'aaaa" +
                    "\', OldE-mail: \'aaa@aaa.com\', NewE-mail: \'aaa@aaa.com\')");
#line 43
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
