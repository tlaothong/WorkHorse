// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerProfile.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class RegisterUserFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RegisterUser.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "RegisterUser", "In order to register new user\r\nAs a back server\r\nI want to be create new user", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName"});
            table1.AddRow(new string[] {
                        "OhAe"});
            table1.AddRow(new string[] {
                        "Boy"});
            table1.AddRow(new string[] {
                        "Nittaya"});
            table1.AddRow(new string[] {
                        "Au"});
#line 7
testRunner.Given("(RegisterUser)server has user profile information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(RegisterUser)ผู้เล่นสมัครโดยมีผู้แนะนำมาด้วย, ระบบบันทึกข้อมูล และส่งรหัสยืนยันใ" +
            "ห้ EmailSender ส่ง E-mail รหัสยืนยันให้ผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegisterUser")]
        public virtual void RegisterUserผเลนสมครโดยมผแนะนำมาดวยระบบบนทกขอมลและสงรหสยนยนใหEmailSenderสงE_Mailรหสยนยนใหผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(RegisterUser)ผู้เล่นสมัครโดยมีผู้แนะนำมาด้วย, ระบบบันทึกข้อมูล และส่งรหัสยืนยันใ" +
                    "ห้ EmailSender ส่ง E-mail รหัสยืนยันให้ผู้เล่น", new string[] {
                        "record_mock"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("The RegisterUserExecutor has been created and initialized");
#line 17
testRunner.And("the upline should be avaliable(UserName: \'Nittaya\')");
#line 18
testRunner.And("the user profile should be create(UserName: \'OhAe\', Password: \'1234\', E-mail: \'ab" +
                    "c@abc.com\', CellPhone: \'0812345678\', Upline: \'Nittaya\', VeriflyCode: \'A2SK\')");
#line 19
testRunner.When("call RegisterUserExecutor(UserName: \'OhAe\', Password: \'1234\', E-mail: \'abc@abc.co" +
                    "m\', CellPhone: \'0812345678\', Upline: \'Nittaya\', VeriflyCode: \'A2SK\')");
#line 20
testRunner.Then("the result should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(RegisterUser)ผู้เล่นสมัครโดยมีผู้แนะนำมาด้วย แต่ไม่มีผู้แนะนำในระบบ, ระบบแจ้งเตื" +
            "อนผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "RegisterUser")]
        public virtual void RegisterUserผเลนสมครโดยมผแนะนำมาดวยแตไมมผแนะนำในระบบระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(RegisterUser)ผู้เล่นสมัครโดยมีผู้แนะนำมาด้วย แต่ไม่มีผู้แนะนำในระบบ, ระบบแจ้งเตื" +
                    "อนผู้เล่น", new string[] {
                        "record_mock"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
testRunner.Given("The RegisterUserExecutor has been created and initialized");
#line 25
testRunner.And("the upline should be unvaliable(UserName: \'Ple\')");
#line 26
testRunner.When("Expected exception and call RegisterUserExecutor(UserName: \'OhAe\', Password: \'123" +
                    "4\', E-mail: \'abc@abc.com\', CellPhone: \'0812345678\', Upline: \'Ple\', VeriflyCode: " +
                    "\'A2SK\')");
#line 27
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
