// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.MagicNine.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListBetLogFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListBetLog.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListBetLog", "In order to list all bet information that player has beted at round\r\nAs a back se" +
                    "rver\r\nI want to be told the bet log information", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "UserName",
                        "DateTime",
                        "BetOrder",
                        "TrackingID"});
            table1.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "2553/3/12 10:00",
                        "12",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table1.AddRow(new string[] {
                        "12",
                        "Boy",
                        "2553/3/12 11:20",
                        "23",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table1.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "2553/3/12 11:22",
                        "42",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table1.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "2553/3/12 11:28",
                        "99",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table1.AddRow(new string[] {
                        "13",
                        "Nit",
                        "2553/3/12 10:00",
                        "24",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table1.AddRow(new string[] {
                        "13",
                        "Boy",
                        "2553/3/12 11:20",
                        "76",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table1.AddRow(new string[] {
                        "14",
                        "OhAe",
                        "2553/3/12 11:22",
                        "92",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table1.AddRow(new string[] {
                        "14",
                        "OhAe",
                        "2553/3/12 11:28",
                        "32",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
#line 8
testRunner.Given("server has bet information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ได้รับข้อมูล RoundID, UserName, มีข้อมูลที่ต้องการในระบบ, ระบบดึงประวัติการลงพนัน" +
            "ของผู้เล่นทั้งหมดในโต๊ะเกมแล้วส่งกลับ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ไดรบขอมลRoundIDUserNameมขอมลทตองการในระบบระบบดงประวตการลงพนนของผเลนทงหมดในโตะเกมแลวสงกลบ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ได้รับข้อมูล RoundID, UserName, มีข้อมูลที่ต้องการในระบบ, ระบบดึงประวัติการลงพนัน" +
                    "ของผู้เล่นทั้งหมดในโต๊ะเกมแล้วส่งกลับ", new string[] {
                        "record_mock",
                        "record_mock"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line 22
testRunner.And("sent RoundID: \'12\', UserName: \'OhAe\' and expected BetInformation(s) recieved");
#line 23
testRunner.When("call ListBetLogCommand(RoundID: \'12\', UserName: \'OhAe\')");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "UserName",
                        "DateTime",
                        "BetOrder",
                        "TrackingID"});
            table2.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "2553/3/12 10:00",
                        "12",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table2.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "2553/3/12 11:22",
                        "42",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
            table2.AddRow(new string[] {
                        "12",
                        "OhAe",
                        "2553/3/12 11:28",
                        "99",
                        "B21F8971-DBAB-400F-9D95-151BA24875C1"});
#line 24
testRunner.Then("the result should be list bet information(s) as:", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ได้รับข้อมูลโต๊ะเกมและชื่อผู้เล่น, ไม่มีข้อมูลที่ต้องการในระบบ, ระบบดึงประวัติการ" +
            "ลงพนันของผู้เล่นทั้งหมดในโต๊ะเกมแล้วส่งกลับ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListBetLog")]
        public virtual void ไดรบขอมลโตะเกมและชอผเลนไมมขอมลทตองการในระบบระบบดงประวตการลงพนนของผเลนทงหมดในโตะเกมแลวสงกลบ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ได้รับข้อมูลโต๊ะเกมและชื่อผู้เล่น, ไม่มีข้อมูลที่ต้องการในระบบ, ระบบดึงประวัติการ" +
                    "ลงพนันของผู้เล่นทั้งหมดในโต๊ะเกมแล้วส่งกลับ", new string[] {
                        "record_mock"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("The ListBetLogExecutor has been created and initialized");
#line 33
testRunner.And("sent RoundID: \'13\', UserName: \'OhAe\' and expected BetInformation(s) is emtpy");
#line 34
testRunner.When("call ListBetLogCommand(RoundID: \'13\', UserName: \'OhAe\')");
#line 35
testRunner.Then("the result should be null");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
