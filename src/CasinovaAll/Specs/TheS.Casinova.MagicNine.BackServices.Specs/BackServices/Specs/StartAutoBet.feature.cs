// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.MagicNine.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class StartAutoBetFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "StartAutoBet.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "StartAutoBet", "In order to bet\r\nAs a back server\r\nI want to be automatic betting by server", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "NonRefundable",
                        "Refundable"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "463.61",
                        "200"});
            table1.AddRow(new string[] {
                        "Boy",
                        "0.99",
                        "0"});
            table1.AddRow(new string[] {
                        "Toommy",
                        "36.95",
                        "37"});
            table1.AddRow(new string[] {
                        "Au",
                        "234.00",
                        "326"});
            table1.AddRow(new string[] {
                        "Game",
                        "1",
                        "5"});
            table1.AddRow(new string[] {
                        "Khag",
                        "0.52",
                        "45"});
            table1.AddRow(new string[] {
                        "Ple",
                        "0.99",
                        "452"});
#line 8
testRunner.Given("(StartAutoBet)server has player information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(StartAutoBet)ผู้เล่นลงพนันอัตโนมัติ โดยผู้เล่นมีชิฟพอและชิฟตายมากกว่าจำนวนเงินที" +
            "่ลงพนัน ระบบบันทึกประวัติการลงพนันของผู้เล่นและหักเฉพาะชิฟตาย แล้วส่งข้อมูลให้ระ" +
            "บบ AutoBet Engine ทำงานต่อ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StartAutoBet")]
        public virtual void StartAutoBetผเลนลงพนนอตโนมตโดยผเลนมชฟพอและชฟตายมากกวาจำนวนเงนทลงพนนระบบบนทกประวตการลงพนนของผเลนและหกเฉพาะชฟตายแลวสงขอมลใหระบบAutoBetEngineทำงานตอ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(StartAutoBet)ผู้เล่นลงพนันอัตโนมัติ โดยผู้เล่นมีชิฟพอและชิฟตายมากกว่าจำนวนเงินที" +
                    "่ลงพนัน ระบบบันทึกประวัติการลงพนันของผู้เล่นและหักเฉพาะชิฟตาย แล้วส่งข้อมูลให้ระ" +
                    "บบ AutoBet Engine ทำงานต่อ", new string[] {
                        "record_mock",
                        "record_mock"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given("The StartAutoBetExecutor has been created and initialized");
#line 21
testRunner.And("(StartAutoBet)sent name: \'OhAe\' the player\'s balance should recieved");
#line 22
testRunner.And("(StartAutoBet)the player\'s balance should be update only bonuschips, Amount: \'200" +
                    "\'");
#line 23
testRunner.And("the autobet information should be update assume dateTime as: \'2553/11/24 14:43\'(U" +
                    "serName: \'OhAe\', RoundID: \'1\', Amount: \'200\', Interval: \'5\', AutoBetTrackingID: " +
                    "\'B21F8971-DBAB-400F-9D95-151BA24875C1\', BetTrackingID: \'A21F8971-DBAB-400F-9D95-" +
                    "151BA24875C2\')");
#line 24
testRunner.And("the StartAuto Engine shoule be call as: (UserName: \'OhAe\', RoundID: \'1\', Amount: " +
                    "\'200\', Interval: \'5\', AutoBetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\'," +
                    " BetTrackingID: \'A21F8971-DBAB-400F-9D95-151BA24875C2\')");
#line 25
testRunner.When("call StartAutoBetExecutor(UserName: \'OhAe\', RoundID: \'1\', Amount: \'200\', Interval" +
                    ": \'5\', AutoBetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\', BetTrackingID:" +
                    " \'A21F8971-DBAB-400F-9D95-151BA24875C2\')");
#line 26
testRunner.Then("autobet engine should be execute");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(StartAutoBet)ผู้เล่นลงพนันอัตโนมัติ โดยผู้เล่นมีชิฟพอและชิฟตายน้อยกว่าค่าดูสีที่" +
            "ชนะระบบหักชิฟเป็นเพิ่ม ระบบบันทึกประวัติการลงพนันของผู้เล่นและหักเฉพาะชิฟตาย แล้" +
            "วส่งข้อมูลให้ระบบ AutoBet Engine ทำงานต่อ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StartAutoBet")]
        public virtual void StartAutoBetผเลนลงพนนอตโนมตโดยผเลนมชฟพอและชฟตายนอยกวาคาดสทชนะระบบหกชฟเปนเพมระบบบนทกประวตการลงพนนของผเลนและหกเฉพาะชฟตายแลวสงขอมลใหระบบAutoBetEngineทำงานตอ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(StartAutoBet)ผู้เล่นลงพนันอัตโนมัติ โดยผู้เล่นมีชิฟพอและชิฟตายน้อยกว่าค่าดูสีที่" +
                    "ชนะระบบหักชิฟเป็นเพิ่ม ระบบบันทึกประวัติการลงพนันของผู้เล่นและหักเฉพาะชิฟตาย แล้" +
                    "วส่งข้อมูลให้ระบบ AutoBet Engine ทำงานต่อ", new string[] {
                        "record_mock"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
testRunner.Given("The StartAutoBetExecutor has been created and initialized");
#line 31
testRunner.And("(StartAutoBet)sent name: \'Ple\' the player\'s balance should recieved");
#line 32
testRunner.And("(StartAutoBet)the player\'s balance should be update both chips, Amount: \'200\'");
#line 33
testRunner.And("the autobet information should be update assume dateTime as: \'2553/11/24 14:43\'(U" +
                    "serName: \'Ple\', RoundID: \'1\', Amount: \'200\', Interval: \'5\', AutoBetTrackingID: \'" +
                    "B21F8971-DBAB-400F-9D95-151BA24875C1\', BetTrackingID: \'A21F8971-DBAB-400F-9D95-1" +
                    "51BA24875C2\')");
#line 34
testRunner.And("the StartAuto Engine shoule be call as: (UserName: \'Ple\', RoundID: \'1\', Amount: \'" +
                    "200\', Interval: \'5\', AutoBetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\', " +
                    "BetTrackingID: \'A21F8971-DBAB-400F-9D95-151BA24875C2\')");
#line 35
testRunner.When("call StartAutoBetExecutor(UserName: \'Ple\', RoundID: \'1\', Amount: \'200\', Interval:" +
                    " \'5\', AutoBetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA24875C1\', BetTrackingID: " +
                    "\'A21F8971-DBAB-400F-9D95-151BA24875C2\')");
#line 36
testRunner.Then("autobet engine should be execute");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(StartAutoBet)ผู้เล่นลงพนันอัตโนมัติ โดยผู้เล่นมีเงินไม่พอ ระบบแจ้งเตือนผู้เล่นว่" +
            "าเงินไม่พอ")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "StartAutoBet")]
        public virtual void StartAutoBetผเลนลงพนนอตโนมตโดยผเลนมเงนไมพอระบบแจงเตอนผเลนวาเงนไมพอ()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(StartAutoBet)ผู้เล่นลงพนันอัตโนมัติ โดยผู้เล่นมีเงินไม่พอ ระบบแจ้งเตือนผู้เล่นว่" +
                    "าเงินไม่พอ", new string[] {
                        "record_mock"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
testRunner.Given("The StartAutoBetExecutor has been created and initialized");
#line 41
testRunner.And("(StartAutoBet)sent name: \'Ple\' the player\'s balance should recieved");
#line 42
testRunner.When("Expected exeception and call StartAutoBetExecutor(UserName: \'Ple\', RoundID: \'1\', " +
                    "Amount: \'5200\', Interval: \'5\', AutoBetTrackingID: \'B21F8971-DBAB-400F-9D95-151BA" +
                    "24875C1\', BetTrackingID: \'A21F8971-DBAB-400F-9D95-151BA24875C2\')");
#line 43
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
