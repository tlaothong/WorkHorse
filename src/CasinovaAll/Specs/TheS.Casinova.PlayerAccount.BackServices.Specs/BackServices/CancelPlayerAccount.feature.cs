// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerAccount.BackServices
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CancelPlayerAccountFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CancelPlayerAccount.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CancelPlayerAccount", "In order to cancel player account\r\nAs a back server\r\nI want to be deactivate play" +
                    "er account", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "PlayerAccountID",
                        "UserName",
                        "AccountType",
                        "AccountNo",
                        "Active"});
            table1.AddRow(new string[] {
                        "1",
                        "OhAe",
                        "VISA",
                        "1234567890123",
                        "true"});
            table1.AddRow(new string[] {
                        "2",
                        "OhAe",
                        "MasterCard",
                        "3425162424231",
                        "true"});
            table1.AddRow(new string[] {
                        "3",
                        "OhAe",
                        "VISA",
                        "5341734163281",
                        "true"});
            table1.AddRow(new string[] {
                        "4",
                        "OhAe",
                        "MasterCard",
                        "3641315341710",
                        "true"});
            table1.AddRow(new string[] {
                        "1",
                        "Boy",
                        "VISA",
                        "3511527382613",
                        "true"});
            table1.AddRow(new string[] {
                        "2",
                        "Boy",
                        "VISA",
                        "3532634272917",
                        "true"});
            table1.AddRow(new string[] {
                        "3",
                        "Boy",
                        "MasterCard",
                        "3513152614332",
                        "true"});
#line 8
testRunner.Given("(CancelPlayerAccount)server has player account information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ผู้เล่นยกเลิกบัญชีของผู้เล่นเอง ที่มีอยู่ในระบบ, ระบบยกเลิกบัญชีของผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CancelPlayerAccount")]
        public virtual void ผเลนยกเลกบญชของผเลนเองทมอยในระบบระบบยกเลกบญชของผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ผู้เล่นยกเลิกบัญชีของผู้เล่นเอง ที่มีอยู่ในระบบ, ระบบยกเลิกบัญชีของผู้เล่น", new string[] {
                        "record_mock",
                        "record_mock"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.Given("The CancelPlayerAccountExecutor has been created and initialized");
#line 21
testRunner.And("sent UserName: \'OhAe\', PlayerAccountID: \'1\' the player account number : \'12345678" +
                    "90123\' should be deactivate");
#line 22
testRunner.When("call CancelPlayerAccountExecutor(UserName: \'OhAe\', PlayerAccountID: \'1\')");
#line 23
testRunner.Then("the player account information should be deactivate");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("ผู้เล่นยกเลิกบัญชีของผู้เล่นเอง ที่มีอยู่ในระบบ, ระบบยกเลิกบัญชีของผู้เล่น2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CancelPlayerAccount")]
        public virtual void ผเลนยกเลกบญชของผเลนเองทมอยในระบบระบบยกเลกบญชของผเลน2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ผู้เล่นยกเลิกบัญชีของผู้เล่นเอง ที่มีอยู่ในระบบ, ระบบยกเลิกบัญชีของผู้เล่น2", new string[] {
                        "record_mock"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
testRunner.Given("The CancelPlayerAccountExecutor has been created and initialized");
#line 28
testRunner.And("sent UserName: \'Boy\', PlayerAccountID: \'3\' the player account number : \'351315261" +
                    "4332\' should be deactivate");
#line 29
testRunner.When("call CancelPlayerAccountExecutor(UserName: \'Boy\', PlayerAccountID: \'3\')");
#line 30
testRunner.Then("the player account information should be deactivate");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
