// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerAccount.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class CreatePlayerAccountFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreatePlayerAccount.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CreatePlayerAccount", "In order to create new player account\r\nAs a back server\r\nI want to be create play" +
                    "er account", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "AccountType"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "Primary"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "Secondary"});
            table1.AddRow(new string[] {
                        "Nit",
                        "Primary"});
            table1.AddRow(new string[] {
                        "Nit",
                        "Secondary"});
#line 7
testRunner.Given("(CreatePlayerAccountInfo) server has player account information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
            "ู้เล่นใช้บัตรเครดิตสมัครและยังไม่มีบัญชี ระบบสร้างบัญชีหลักและบัญชีรอง(บัญชีปล่า" +
            "ว)ให้ผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CreatePlayerAccount")]
        public virtual void CreatePlayerAccountInfoผเลนสมครสมาชกใหมระบบทำการสรางบญชใหผเลนโดยผเลนใชบตรเครดตสมครและยงไมมบญชระบบสรางบญชหลกและบญชรองบญชปลาวใหผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
                    "ู้เล่นใช้บัตรเครดิตสมัครและยังไม่มีบัญชี ระบบสร้างบัญชีหลักและบัญชีรอง(บัญชีปล่า" +
                    "ว)ให้ผู้เล่น", new string[] {
                        "record_mock"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("The CreatePlayerAccountExecutor has been created and initialized");
#line 17
testRunner.And("sent UserName: \'Top\' player account information should recieved");
#line 18
testRunner.And("the player account information should be create(UserName: \'Top\', CardType:\'Credit" +
                    "Card\', AccountNo: \'4513-1456-5460-1004\', CVV: \'4156\', ExpireDate: \'2010/12\', Fir" +
                    "stName: \'Sirinarin\', LastName: \'Akanitthapichat\')");
#line 19
testRunner.When("call CreatePlayerAcoountExecutor(UserName: \'Top\', CardType:\'CreditCard\', AccountN" +
                    "o: \'4513-1456-5460-1004\', CVV: \'4156\', ExpireDate: \'2010/12\', FirstName: \'Sirina" +
                    "rin\', LastName: \'Akanitthapichat\')");
#line 20
testRunner.Then("the result should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
            "ู้เล่นเคยสร้างบัญชีไว้แล้ว ระบบสร้างบัญชีหลักและบัญชีรอง(บัญชีปล่าว)ให้ผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CreatePlayerAccount")]
        public virtual void CreatePlayerAccountInfoผเลนสมครสมาชกใหมระบบทำการสรางบญชใหผเลนโดยผเลนเคยสรางบญชไวแลวระบบสรางบญชหลกและบญชรองบญชปลาวใหผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
                    "ู้เล่นเคยสร้างบัญชีไว้แล้ว ระบบสร้างบัญชีหลักและบัญชีรอง(บัญชีปล่าว)ให้ผู้เล่น", new string[] {
                        "record_mock"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
testRunner.Given("The CreatePlayerAccountExecutor has been created and initialized");
#line 25
testRunner.And("sent UserName: \'OhAe\' player account information should recieved");
#line 26
testRunner.When("Expected exception and call CreatePlayerAcoountExecutor(UserName: \'OhAe\', CardTyp" +
                    "e:\'CreditCard\', AccountNo: \'4513-1456-5460-1004\', CVV: \'4156\', ExpireDate: \'2010" +
                    "/12\', FirstName: \'Sirinarin\', LastName: \'Akanitthapichat\')");
#line 27
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
            "ู้เล่นใช้บัตรอื่นที่ไม่ใช่บัตรเครดิตและยังไม่มีบัญชี ระบบสร้างบัญชีหลักและบัญชีร" +
            "อง(บัญชีปล่าว)ให้ผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CreatePlayerAccount")]
        public virtual void CreatePlayerAccountInfoผเลนสมครสมาชกใหมระบบทำการสรางบญชใหผเลนโดยผเลนใชบตรอนทไมใชบตรเครดตและยงไมมบญชระบบสรางบญชหลกและบญชรองบญชปลาวใหผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
                    "ู้เล่นใช้บัตรอื่นที่ไม่ใช่บัตรเครดิตและยังไม่มีบัญชี ระบบสร้างบัญชีหลักและบัญชีร" +
                    "อง(บัญชีปล่าว)ให้ผู้เล่น", new string[] {
                        "record_mock"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given("The CreatePlayerAccountExecutor has been created and initialized");
#line 32
testRunner.And("sent UserName: \'Top\' player account information should recieved");
#line 33
testRunner.When("Expected exception and call CreatePlayerAcoountExecutor(UserName: \'Top\', CardType" +
                    ":\'Visa\', AccountNo: \'4513-1456-5460-1004\', CVV: \'4156\', ExpireDate: \'2010/12\', F" +
                    "irstName: \'Sirinarin\', LastName: \'Akanitthapichat\')");
#line 34
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
            "ู้เล่นใช้บัตรอื่นที่ไม่ใช่บัตรเครดิตและเคยสร้างบัญชีไว้แล้ว ระบบสร้างบัญชีหลักแล" +
            "ะบัญชีรอง(บัญชีปล่าว)ให้ผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "CreatePlayerAccount")]
        public virtual void CreatePlayerAccountInfoผเลนสมครสมาชกใหมระบบทำการสรางบญชใหผเลนโดยผเลนใชบตรอนทไมใชบตรเครดตและเคยสรางบญชไวแลวระบบสรางบญชหลกและบญชรองบญชปลาวใหผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(CreatePlayerAccountInfo)ผู้เล่นสมัครสมาชิกใหม่ระบบทำการสร้างบัญชีให้ผู้เล่น โดยผ" +
                    "ู้เล่นใช้บัตรอื่นที่ไม่ใช่บัตรเครดิตและเคยสร้างบัญชีไว้แล้ว ระบบสร้างบัญชีหลักแล" +
                    "ะบัญชีรอง(บัญชีปล่าว)ให้ผู้เล่น", new string[] {
                        "record_mock"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
testRunner.Given("The CreatePlayerAccountExecutor has been created and initialized");
#line 39
testRunner.And("sent UserName: \'OhAe\' player account information should recieved");
#line 40
testRunner.When("Expected exception and call CreatePlayerAcoountExecutor(UserName: \'OhAe\', CardTyp" +
                    "e:\'Visa\', AccountNo: \'4513-1456-5460-1004\', CVV: \'4156\', ExpireDate: \'2010/12\', " +
                    "FirstName: \'Sirinarin\', LastName: \'Akanitthapichat\')");
#line 41
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
