// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerAccount.BackServices.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class EditPlayerAccountFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EditPlayerAccount.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EditPlayerAccount", "In order to edit account information\r\nAs a back server\r\nI want to be update playe" +
                    "r account information", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "AccountType",
                        "Active"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "Primary",
                        "True"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "Secondary",
                        "True"});
            table1.AddRow(new string[] {
                        "Nit",
                        "Primary",
                        "False"});
            table1.AddRow(new string[] {
                        "Nit",
                        "Secondary",
                        "False"});
#line 7
testRunner.Given("(EditPlayerAccount) server has player account information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีหลัก โดยใช้บัตรเครดิตและบัญชีเปิดใช้งาน" +
            "อยู่ ระบบบันทึกข้อมูลบัญชีที่แก้ไข")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditPlayerAccount")]
        public virtual void EditPlayerAccountผเลนแกไขขอมลบญชหลกโดยใชบตรเครดตและบญชเปดใชงานอยระบบบนทกขอมลบญชทแกไข()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีหลัก โดยใช้บัตรเครดิตและบัญชีเปิดใช้งาน" +
                    "อยู่ ระบบบันทึกข้อมูลบัญชีที่แก้ไข", new string[] {
                        "record_mock"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
testRunner.Given("The EditPlayerAccountExecutor has been created and initialized");
#line 17
testRunner.And("(EditPlayerAccount)sent UserName: \'OhAe\' player account information should reciev" +
                    "ed");
#line 18
testRunner.And("the player account information should be update(UserName: \'OhAe\', AccountType: \'P" +
                    "rimary\', AccountNo: \'5136-2468-3246-3216\', CardType: \'CreditCard\', ExpireDate: \'" +
                    "2011/12\', FirstName: \'Siriwasan\', LastName: \'Akanitthapichat\')");
#line 19
testRunner.When("call EditPlayerAccountExecutor(UserName: \'OhAe\', AccountType: \'Primary\', AccountN" +
                    "o: \'5136-2468-3246-3216\', CardType: \'CreditCard\', ExpireDate: \'2011/12\', FirstNa" +
                    "me: \'Siriwasan\', LastName: \'Akanitthapichat\')");
#line 20
testRunner.Then("the result should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีรอง โดยใช้บัตรเครดิตและบัญชีเปิดใช้งานอ" +
            "ยู่ ระบบบันทึกข้อมูลบัญชีที่แก้ไข")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditPlayerAccount")]
        public virtual void EditPlayerAccountผเลนแกไขขอมลบญชรองโดยใชบตรเครดตและบญชเปดใชงานอยระบบบนทกขอมลบญชทแกไข()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีรอง โดยใช้บัตรเครดิตและบัญชีเปิดใช้งานอ" +
                    "ยู่ ระบบบันทึกข้อมูลบัญชีที่แก้ไข", new string[] {
                        "record_mock"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
testRunner.Given("The EditPlayerAccountExecutor has been created and initialized");
#line 25
testRunner.And("(EditPlayerAccount)sent UserName: \'OhAe\' player account information should reciev" +
                    "ed");
#line 26
testRunner.And("the player account information should be update(UserName: \'OhAe\', AccountType: \'S" +
                    "econdary\', AccountNo: \'6598-2068-5680-3216\', CardType: \'Visa\', ExpireDate: \'2011" +
                    "/06\', FirstName: \'Wanida\', LastName: \'Toommy\')");
#line 27
testRunner.When("call EditPlayerAccountExecutor(UserName: \'OhAe\', AccountType: \'Secondary\', Accoun" +
                    "tNo: \'6598-2068-5680-3216\', CardType: \'Visa\', ExpireDate: \'2011/06\', FirstName: " +
                    "\'Wanida\', LastName: \'Toommy\')");
#line 28
testRunner.Then("the result should be create");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีหลัก โดยผู้เล่นใช้บัตรอื่นที่ไม่ใช่บัตร" +
            "เครดิตและบัญชีเปิดใช้งานอยู่ ระบบแจ้งเตือนผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditPlayerAccount")]
        public virtual void EditPlayerAccountผเลนแกไขขอมลบญชหลกโดยผเลนใชบตรอนทไมใชบตรเครดตและบญชเปดใชงานอยระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีหลัก โดยผู้เล่นใช้บัตรอื่นที่ไม่ใช่บัตร" +
                    "เครดิตและบัญชีเปิดใช้งานอยู่ ระบบแจ้งเตือนผู้เล่น", new string[] {
                        "record_mock"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.Given("The EditPlayerAccountExecutor has been created and initialized");
#line 33
testRunner.And("(EditPlayerAccount)sent UserName: \'OhAe\' player account information should reciev" +
                    "ed");
#line 34
testRunner.When("Expected exception and call EditPlayerAccountExecutor(UserName: \'OhAe\', AccountTy" +
                    "pe: \'Primary\', AccountNo: \'6598-2068-5680-3216\', CardType: \'Visa\', ExpireDate: \'" +
                    "2011/06\', FirstName: \'Wanida\', LastName: \'Toommy\')");
#line 35
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีหลัก โดยใช้บัตรเครดิตและบัญชีถูกปิดการใ" +
            "ช้งานอยู่ ระบบแจ้งเตือนผู้เล่น")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EditPlayerAccount")]
        public virtual void EditPlayerAccountผเลนแกไขขอมลบญชหลกโดยใชบตรเครดตและบญชถกปดการใชงานอยระบบแจงเตอนผเลน()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("(EditPlayerAccount)ผู้เล่นแก้ไขข้อมูลบัญชีหลัก โดยใช้บัตรเครดิตและบัญชีถูกปิดการใ" +
                    "ช้งานอยู่ ระบบแจ้งเตือนผู้เล่น", new string[] {
                        "record_mock"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 39
testRunner.Given("The EditPlayerAccountExecutor has been created and initialized");
#line 40
testRunner.And("(EditPlayerAccount)sent UserName: \'Nit\' player account information should recieve" +
                    "d");
#line 41
testRunner.When("Expected exception and call EditPlayerAccountExecutor(UserName: \'Nit\', AccountTyp" +
                    "e: \'Primary\', AccountNo: \'6598-2068-5680-3216\', CardType: \'Visa\', ExpireDate: \'2" +
                    "011/06\', FirstName: \'Wanida\', LastName: \'Toommy\')");
#line 42
testRunner.Then("the result should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
