// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.PlayerProfile.WebExecutors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ListActionLogFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ListActionLogFeature.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ListActionLog", "In order to list action log\r\nAs a system\r\nI want to list action log of player", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "DateTime",
                        "Action",
                        "GameName",
                        "Amount"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "11/25/2010 10:00",
                        "Bet",
                        "White-Colors",
                        "70"});
            table1.AddRow(new string[] {
                        "Boy",
                        "11/25/2010 11:20",
                        "AutoBet",
                        "MagicNine",
                        "100"});
            table1.AddRow(new string[] {
                        "OhAe",
                        "11/25/2010 11:22",
                        "Bet",
                        "MagicNine",
                        "1"});
            table1.AddRow(new string[] {
                        "Nit",
                        "11/25/2010 11:28",
                        "AutoBet",
                        "Magicnine",
                        "50"});
            table1.AddRow(new string[] {
                        "Nit",
                        "11/25/2010 10:00",
                        "Bet",
                        "White-Colors",
                        "20"});
#line 8
testRunner.Given("Server has action log information as:", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListActionLog]ระบบได้รับข้อมูล username ถูกต้อง ระบบสามารถดึงข้อมูล action log ข" +
            "องผู้เล่นได้")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListActionLog")]
        public virtual void ListActionLogระบบไดรบขอมลUsernameถกตองระบบสามารถดงขอมลActionLogของผเลนได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListActionLog]ระบบได้รับข้อมูล username ถูกต้อง ระบบสามารถดึงข้อมูล action log ข" +
                    "องผู้เล่นได้", new string[] {
                        "record_mock",
                        "record_mock"});
#line 17
this.ScenarioSetup(scenarioInfo);
#line 18
testRunner.Given("The ListActionLogExecutor has been created and initialized");
#line 19
testRunner.And("Sent UserName: \'OhAe\' for list action log");
#line 20
testRunner.When("Call ListActionLogExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "DateTime",
                        "Action",
                        "GameName",
                        "Amount"});
            table2.AddRow(new string[] {
                        "OhAe",
                        "11/25/2010 10:00",
                        "Bet",
                        "White-Colors",
                        "70"});
            table2.AddRow(new string[] {
                        "OhAe",
                        "11/25/2010 11:22",
                        "Bet",
                        "MagicNine",
                        "1"});
#line 21
testRunner.Then("Action log information should be :", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListActionLog]ระบบได้รับข้อมูล username ถูกต้อง แต่ใน server ยังไม่มีข้อมูล acti" +
            "on log")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListActionLog")]
        public virtual void ListActionLogระบบไดรบขอมลUsernameถกตองแตในServerยงไมมขอมลActionLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListActionLog]ระบบได้รับข้อมูล username ถูกต้อง แต่ใน server ยังไม่มีข้อมูล acti" +
                    "on log", new string[] {
                        "record_mock"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 28
testRunner.Given("The ListActionLogExecutor has been created and initialized");
#line 29
testRunner.And("Sent UserName: \'Ku\' for list action log");
#line 30
testRunner.When("Call ListActionLogExecutor()");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "DateTime",
                        "Action",
                        "GameName",
                        "Amount"});
#line 31
testRunner.Then("Action log information should be :", ((string)(null)), table3);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("[ListActionLog]ระบบไม่ได้รับข้อมูล username ระบบไม่สามารถดึงข้อมูล action log ได้" +
            "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "ListActionLog")]
        public virtual void ListActionLogระบบไมไดรบขอมลUsernameระบบไมสามารถดงขอมลActionLogได()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("[ListActionLog]ระบบไม่ได้รับข้อมูล username ระบบไม่สามารถดึงข้อมูล action log ได้" +
                    "", new string[] {
                        "record_mock"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
testRunner.Given("The ListActionLogExecutor has been created and initialized");
#line 37
testRunner.And("Sent UserName: \'\' for validation");
#line 38
testRunner.When("Call ListActionLogExecutor() for validate input");
#line 39
testRunner.Then("Action log information should be throw exception");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
