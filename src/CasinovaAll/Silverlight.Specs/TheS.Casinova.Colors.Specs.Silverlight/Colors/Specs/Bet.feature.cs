// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.Colors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class N2NBetFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Bet.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "N2N Bet", @"1.Player insert amount and select Color for bet and click bet button (Silverlight)
2.Save player action in PayLog, subtract account balance and display waiting status (Silverlight)
3.Send Bet identify by username, roundID, amount and color to web server (Silverlight)
4.Web server generate trakingID and send it back to client (Web Server)
5.Save trackingID into PayLog and sent trackingID to Observer for follow lot until found this trackingID (Silverlight)
6.Send request get list game play information to web server (Silverlight)
7.Server list game play information and send it back to client (Web Server)
8.Display game play information TotalAmountOfBlack, TotalAmountOfWhite and Winner (Silverlight)
9.If OnGoingTrackingID not equal TrackingID and PayLog count low than one repeat step 5 (Silverlight)
10.Delete trackingID in PayLog (Silverlight)
11.If observer don't follow anything, remove waiting state (Silverlight)", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
testRunner.Given("Create and initialize GamePlayViewModel and Colors game service");
#line 16
testRunner.And("Setup trackingID for bet {E8481A68-7F9F-4466-B7B8-1355ED2D32C6}");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click save player action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click save player action in PayLog", new string[] {
                        "record_mock"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
testRunner.When("Click Bet black amount=30 in game round=15");
#line 21
testRunner.Then("PayLog count=\'1\' are");
#line 22
testRunner.And("Lot of TrackingID=\'{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}\' Is Retrieved");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table1.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
#line 23
testRunner.And("Paylog have save information are", ((string)(null)), table1);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one, save player action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one, save player action in PayLog", new string[] {
                        "record_mock"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 29
testRunner.When("Click Bet black amount=30 in game round=15");
#line 30
testRunner.And("Click Bet black amount=45 in game round=15");
#line 31
testRunner.And("Click Bet black amount=50 in game round=15");
#line 32
testRunner.And("Click Bet black amount=55 in game round=15");
#line 33
testRunner.And("Click Bet black amount=1 in game round=15");
#line 34
testRunner.Then("PayLog count=\'5\' are");
#line 35
testRunner.And("Lot of TrackingID=\'{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}\' Is Retrieved");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table2.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table2.AddRow(new string[] {
                        "15",
                        "45",
                        "Black"});
            table2.AddRow(new string[] {
                        "15",
                        "50",
                        "Black"});
            table2.AddRow(new string[] {
                        "15",
                        "55",
                        "Black"});
            table2.AddRow(new string[] {
                        "15",
                        "1",
                        "Black"});
#line 36
testRunner.And("Paylog have save information are", ((string)(null)), table2);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference colors, save player action in P" +
            "ayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceColorsSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference colors, save player action in P" +
                    "ayLog", new string[] {
                        "record_mock"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 46
testRunner.When("Click Bet black amount=30 in game round=15");
#line 47
testRunner.And("Click Bet white amount=45 in game round=15");
#line 48
testRunner.And("Click Bet white amount=50 in game round=15");
#line 49
testRunner.And("Click Bet black amount=55 in game round=15");
#line 50
testRunner.And("Click Bet white amount=1 in game round=15");
#line 51
testRunner.Then("PayLog count=\'5\' are");
#line 52
testRunner.And("Lot of TrackingID=\'{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}\' Is Retrieved");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table3.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table3.AddRow(new string[] {
                        "15",
                        "45",
                        "White"});
            table3.AddRow(new string[] {
                        "15",
                        "50",
                        "White"});
            table3.AddRow(new string[] {
                        "15",
                        "55",
                        "Black"});
            table3.AddRow(new string[] {
                        "15",
                        "1",
                        "White"});
#line 53
testRunner.And("Paylog have save information are", ((string)(null)), table3);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference roundID, save player action in " +
            "PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceRoundIDSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference roundID, save player action in " +
                    "PayLog", new string[] {
                        "record_mock"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 63
testRunner.When("Click Bet black amount=30 in game round=15");
#line 64
testRunner.And("Click Bet black amount=45 in game round=16");
#line 65
testRunner.And("Click Bet black amount=50 in game round=17");
#line 66
testRunner.And("Click Bet black amount=55 in game round=18");
#line 67
testRunner.And("Click Bet black amount=1 in game round=19");
#line 68
testRunner.Then("PayLog count=\'5\' are");
#line 69
testRunner.And("Lot of TrackingID=\'{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}\' Is Retrieved");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table4.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table4.AddRow(new string[] {
                        "16",
                        "45",
                        "Black"});
            table4.AddRow(new string[] {
                        "17",
                        "50",
                        "Black"});
            table4.AddRow(new string[] {
                        "18",
                        "55",
                        "Black"});
            table4.AddRow(new string[] {
                        "19",
                        "1",
                        "Black"});
#line 70
testRunner.And("Paylog have save information are", ((string)(null)), table4);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference roundID and colors, save player" +
            " action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceRoundIDAndColorsSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference roundID and colors, save player" +
                    " action in PayLog", new string[] {
                        "record_mock"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 80
testRunner.When("Click Bet white amount=30 in game round=15");
#line 81
testRunner.And("Click Bet black amount=45 in game round=16");
#line 82
testRunner.And("Click Bet white amount=50 in game round=17");
#line 83
testRunner.And("Click Bet white amount=55 in game round=18");
#line 84
testRunner.And("Click Bet black amount=1 in game round=19");
#line 85
testRunner.And("Click Bet black amount=100 in game round=15");
#line 86
testRunner.Then("PayLog count=\'6\' are");
#line 87
testRunner.And("Lot of TrackingID=\'{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}\' Is Retrieved");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table5.AddRow(new string[] {
                        "15",
                        "30",
                        "White"});
            table5.AddRow(new string[] {
                        "16",
                        "45",
                        "Black"});
            table5.AddRow(new string[] {
                        "17",
                        "50",
                        "White"});
            table5.AddRow(new string[] {
                        "18",
                        "55",
                        "White"});
            table5.AddRow(new string[] {
                        "19",
                        "1",
                        "Black"});
            table5.AddRow(new string[] {
                        "15",
                        "100",
                        "Black"});
#line 88
testRunner.And("Paylog have save information are", ((string)(null)), table5);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
