// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.Colors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class N2NBetFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Bet.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "N2N Bet", @"1.Player insert amount and select Color for bet and click bet button (Silverlight)
2.Save player action in PayLog, subtract account balance and display waiting status (Silverlight)
3.Send Bet identify by username, roundID, amount and color to web server (Silverlight)
4.Web server generate trakingID and send it back to client (Web Server)
5.Save trackingID into PayLog and sent trackingID to Observer for follow lot until found this trackingID (Silverlight)
6.Send request get list game play information to web server (Silverlight)
7.Server list game play information and send it back to client (Web Server)
8.Display game play information TotalAmountOfBlack, TotalAmountOfWhite and Winner (Silverlight)
9.If OnGoingTrackingID not equal TrackingID and PayLog count low than one repeat step 5 (Silverlight)
10.Delete trackingID in PayLog (Silverlight)
11.If observer don't follow anything, remove waiting state (Silverlight)", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
testRunner.Given("Create and initialize GamePlayViewModel and Colors game service");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click save player action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click save player action in PayLog", new string[] {
                        "record_mock"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given("Setup trackingID for bet {E8481A68-7F9F-4466-B7B8-1355ED2D32C6}");
#line 20
testRunner.When("Click Bet black amount=30 in game round=15");
#line 21
testRunner.Then("PayLog count=\'1\' are");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table1.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
#line 22
testRunner.And("Paylog have save information are", ((string)(null)), table1);
#line 25
testRunner.And("Lot of TrackingID=\'{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}\' Is Retrieved");
#line 26
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one, save player action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one, save player action in PayLog", new string[] {
                        "record_mock"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table2.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table2.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table2.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table2.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table2.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 30
testRunner.Given("Setup web service trackingID for bets", ((string)(null)), table2);
#line 37
testRunner.When("Click Bet black amount=30 in game round=15");
#line 38
testRunner.And("Click Bet black amount=45 in game round=15");
#line 39
testRunner.And("Click Bet black amount=50 in game round=15");
#line 40
testRunner.And("Click Bet black amount=55 in game round=15");
#line 41
testRunner.And("Click Bet black amount=1 in game round=15");
#line 42
testRunner.Then("PayLog count=\'5\' are");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table3.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table3.AddRow(new string[] {
                        "15",
                        "45",
                        "Black"});
            table3.AddRow(new string[] {
                        "15",
                        "50",
                        "Black"});
            table3.AddRow(new string[] {
                        "15",
                        "55",
                        "Black"});
            table3.AddRow(new string[] {
                        "15",
                        "1",
                        "Black"});
#line 43
testRunner.And("Paylog have save information are", ((string)(null)), table3);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table4.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table4.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table4.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table4.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table4.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 50
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table4);
#line 57
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference colors, save player action in P" +
            "ayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceColorsSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference colors, save player action in P" +
                    "ayLog", new string[] {
                        "record_mock"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table5.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table5.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table5.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table5.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table5.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 61
testRunner.Given("Setup web service trackingID for bets", ((string)(null)), table5);
#line 68
testRunner.When("Click Bet black amount=30 in game round=15");
#line 69
testRunner.And("Click Bet white amount=45 in game round=15");
#line 70
testRunner.And("Click Bet white amount=50 in game round=15");
#line 71
testRunner.And("Click Bet black amount=55 in game round=15");
#line 72
testRunner.And("Click Bet white amount=1 in game round=15");
#line 73
testRunner.Then("PayLog count=\'5\' are");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table6.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table6.AddRow(new string[] {
                        "15",
                        "45",
                        "White"});
            table6.AddRow(new string[] {
                        "15",
                        "50",
                        "White"});
            table6.AddRow(new string[] {
                        "15",
                        "55",
                        "Black"});
            table6.AddRow(new string[] {
                        "15",
                        "1",
                        "White"});
#line 74
testRunner.And("Paylog have save information are", ((string)(null)), table6);
#line 81
testRunner.And("Lot of TrackingID=\'{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}\' Is Retrieved");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table7.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table7.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table7.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table7.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table7.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 82
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table7);
#line 89
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference roundID, save player action in " +
            "PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceRoundIDSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference roundID, save player action in " +
                    "PayLog", new string[] {
                        "record_mock"});
#line 92
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table8.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table8.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table8.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table8.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table8.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 93
testRunner.Given("Setup web service trackingID for bets", ((string)(null)), table8);
#line 100
testRunner.When("Click Bet black amount=30 in game round=15");
#line 101
testRunner.And("Click Bet black amount=45 in game round=16");
#line 102
testRunner.And("Click Bet black amount=50 in game round=17");
#line 103
testRunner.And("Click Bet black amount=55 in game round=18");
#line 104
testRunner.And("Click Bet black amount=1 in game round=19");
#line 105
testRunner.Then("PayLog count=\'5\' are");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table9.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table9.AddRow(new string[] {
                        "16",
                        "45",
                        "Black"});
            table9.AddRow(new string[] {
                        "17",
                        "50",
                        "Black"});
            table9.AddRow(new string[] {
                        "18",
                        "55",
                        "Black"});
            table9.AddRow(new string[] {
                        "19",
                        "1",
                        "Black"});
#line 106
testRunner.And("Paylog have save information are", ((string)(null)), table9);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table10.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table10.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table10.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table10.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table10.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 113
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table10);
#line 120
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference roundID and colors, save player" +
            " action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceRoundIDAndColorsSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference roundID and colors, save player" +
                    " action in PayLog", new string[] {
                        "record_mock"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table11.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table11.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table11.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table11.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table11.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
            table11.AddRow(new string[] {
                        "{098FCF3A-B002-4206-A61F-E6CD765100F5}"});
#line 124
testRunner.Given("Setup web service trackingID for bets", ((string)(null)), table11);
#line 132
testRunner.When("Click Bet white amount=30 in game round=15");
#line 133
testRunner.And("Click Bet black amount=45 in game round=16");
#line 134
testRunner.And("Click Bet white amount=50 in game round=17");
#line 135
testRunner.And("Click Bet white amount=55 in game round=18");
#line 136
testRunner.And("Click Bet black amount=1 in game round=19");
#line 137
testRunner.And("Click Bet black amount=100 in game round=15");
#line 138
testRunner.Then("PayLog count=\'6\' are");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table12.AddRow(new string[] {
                        "15",
                        "30",
                        "White"});
            table12.AddRow(new string[] {
                        "16",
                        "45",
                        "Black"});
            table12.AddRow(new string[] {
                        "17",
                        "50",
                        "White"});
            table12.AddRow(new string[] {
                        "18",
                        "55",
                        "White"});
            table12.AddRow(new string[] {
                        "19",
                        "1",
                        "Black"});
            table12.AddRow(new string[] {
                        "15",
                        "100",
                        "Black"});
#line 139
testRunner.And("Paylog have save information are", ((string)(null)), table12);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table13.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table13.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table13.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table13.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table13.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
            table13.AddRow(new string[] {
                        "{098FCF3A-B002-4206-A61F-E6CD765100F5}"});
#line 147
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table13);
#line 155
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
