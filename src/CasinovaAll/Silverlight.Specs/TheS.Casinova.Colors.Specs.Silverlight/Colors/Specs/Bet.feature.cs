// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.Colors.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class N2NBetFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Bet.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "N2N Bet", @"1.Player insert amount and select Color for bet and click bet button (Silverlight)
2.Save player action in PayLog, subtract account balance and display waiting status (Silverlight)
3.Send Bet identify by username, roundID, amount and color to web server (Silverlight)
4.Web server generate trakingID and send it back to client (Web Server)
5.Save trackingID into PayLog and sent trackingID to Observer for follow lot until found this trackingID (Silverlight)
6.Send request get list game play information to web server (Silverlight)
7.Server list game play information and send it back to client (Web Server)
8.Display game play information TotalAmountOfBlack, TotalAmountOfWhite and Winner (Silverlight)
9.If OnGoingTrackingID not equal TrackingID and PayLog count low than one repeat step 5 (Silverlight)
10.Delete trackingID in PayLog (Silverlight)
11.If observer don't follow anything, remove waiting state (Silverlight)", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
testRunner.Given("Create and initialize GamePlayViewModel and Colors game service");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table1.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table1.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table1.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table1.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table1.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
            table1.AddRow(new string[] {
                        "{098FCF3A-B002-4206-A61F-E6CD765100F5}"});
#line 16
testRunner.And("Setup web service trackingID for bets", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "TableID",
                        "RoundID",
                        "TrackingID",
                        "OnGoingTrackingID",
                        "TotalBetAmountOfBlack",
                        "TotalBetAmountOfWhite",
                        "Winner"});
            table2.AddRow(new string[] {
                        "Sakul",
                        "1",
                        "20",
                        "{CF24E43D-49FA-482B-9AD2-DCF0159F0C41}",
                        "{CF24E43D-49FA-482B-9AD2-DCF0159F0C41}",
                        "100",
                        "20",
                        "Black"});
            table2.AddRow(new string[] {
                        "Sakul",
                        "2",
                        "21",
                        "{CF24E43D-49FA-482B-9AD2-DCF0159F0C41}",
                        "{CF24E43D-49FA-482B-9AD2-DCF0159F0C41}",
                        "100",
                        "20",
                        "White"});
            table2.AddRow(new string[] {
                        "Sakul",
                        "3",
                        "22",
                        "{CF24E43D-49FA-482B-9AD2-DCF0159F0C41}",
                        "{CF24E43D-49FA-482B-9AD2-DCF0159F0C41}",
                        "100",
                        "20",
                        "White"});
#line 24
testRunner.And("Web server have game play information are", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click save player action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click save player action in PayLog", new string[] {
                        "record_mock"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
testRunner.When("Click Bet black amount=30 in game round=15");
#line 33
testRunner.Then("PayLog count=\'1\'");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table3.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
#line 34
testRunner.And("Paylog have save information are", ((string)(null)), table3);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table4.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
#line 37
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table4);
#line 40
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one, save player action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one, save player action in PayLog", new string[] {
                        "record_mock"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
testRunner.When("Click Bet black amount=30 in game round=15");
#line 45
testRunner.And("Click Bet black amount=45 in game round=15");
#line 46
testRunner.And("Click Bet black amount=50 in game round=15");
#line 47
testRunner.And("Click Bet black amount=55 in game round=15");
#line 48
testRunner.And("Click Bet black amount=1 in game round=15");
#line 49
testRunner.Then("PayLog count=\'5\'");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table5.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table5.AddRow(new string[] {
                        "15",
                        "45",
                        "Black"});
            table5.AddRow(new string[] {
                        "15",
                        "50",
                        "Black"});
            table5.AddRow(new string[] {
                        "15",
                        "55",
                        "Black"});
            table5.AddRow(new string[] {
                        "15",
                        "1",
                        "Black"});
#line 50
testRunner.And("Paylog have save information are", ((string)(null)), table5);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table6.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table6.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table6.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table6.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table6.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 57
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table6);
#line 64
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference colors, save player action in P" +
            "ayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceColorsSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference colors, save player action in P" +
                    "ayLog", new string[] {
                        "record_mock"});
#line 67
this.ScenarioSetup(scenarioInfo);
#line 68
testRunner.When("Click Bet black amount=30 in game round=15");
#line 69
testRunner.And("Click Bet white amount=45 in game round=15");
#line 70
testRunner.And("Click Bet white amount=50 in game round=15");
#line 71
testRunner.And("Click Bet black amount=55 in game round=15");
#line 72
testRunner.And("Click Bet white amount=1 in game round=15");
#line 73
testRunner.Then("PayLog count=\'5\'");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table7.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table7.AddRow(new string[] {
                        "15",
                        "45",
                        "White"});
            table7.AddRow(new string[] {
                        "15",
                        "50",
                        "White"});
            table7.AddRow(new string[] {
                        "15",
                        "55",
                        "Black"});
            table7.AddRow(new string[] {
                        "15",
                        "1",
                        "White"});
#line 74
testRunner.And("Paylog have save information are", ((string)(null)), table7);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table8.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table8.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table8.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table8.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table8.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 81
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table8);
#line 88
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference roundID, save player action in " +
            "PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceRoundIDSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference roundID, save player action in " +
                    "PayLog", new string[] {
                        "record_mock"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 92
testRunner.When("Click Bet black amount=30 in game round=15");
#line 93
testRunner.And("Click Bet black amount=45 in game round=16");
#line 94
testRunner.And("Click Bet black amount=50 in game round=17");
#line 95
testRunner.And("Click Bet black amount=55 in game round=18");
#line 96
testRunner.And("Click Bet black amount=1 in game round=19");
#line 97
testRunner.Then("PayLog count=\'5\'");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table9.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table9.AddRow(new string[] {
                        "16",
                        "45",
                        "Black"});
            table9.AddRow(new string[] {
                        "17",
                        "50",
                        "Black"});
            table9.AddRow(new string[] {
                        "18",
                        "55",
                        "Black"});
            table9.AddRow(new string[] {
                        "19",
                        "1",
                        "Black"});
#line 98
testRunner.And("Paylog have save information are", ((string)(null)), table9);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table10.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table10.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table10.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table10.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table10.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
#line 105
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table10);
#line 112
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet button has click more than one and difference roundID and colors, save player" +
            " action in PayLog")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetButtonHasClickMoreThanOneAndDifferenceRoundIDAndColorsSavePlayerActionInPayLog()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet button has click more than one and difference roundID and colors, save player" +
                    " action in PayLog", new string[] {
                        "record_mock"});
#line 115
this.ScenarioSetup(scenarioInfo);
#line 116
testRunner.When("Click Bet white amount=30 in game round=15");
#line 117
testRunner.And("Click Bet black amount=45 in game round=16");
#line 118
testRunner.And("Click Bet white amount=50 in game round=17");
#line 119
testRunner.And("Click Bet white amount=55 in game round=18");
#line 120
testRunner.And("Click Bet black amount=1 in game round=19");
#line 121
testRunner.And("Click Bet black amount=100 in game round=15");
#line 122
testRunner.Then("PayLog count=\'6\'");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table11.AddRow(new string[] {
                        "15",
                        "30",
                        "White"});
            table11.AddRow(new string[] {
                        "16",
                        "45",
                        "Black"});
            table11.AddRow(new string[] {
                        "17",
                        "50",
                        "White"});
            table11.AddRow(new string[] {
                        "18",
                        "55",
                        "White"});
            table11.AddRow(new string[] {
                        "19",
                        "1",
                        "Black"});
            table11.AddRow(new string[] {
                        "15",
                        "100",
                        "Black"});
#line 123
testRunner.And("Paylog have save information are", ((string)(null)), table11);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table12.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table12.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
            table12.AddRow(new string[] {
                        "{2BEC0C07-975A-4B73-859E-87450CCADE14}"});
            table12.AddRow(new string[] {
                        "{4DDB378C-9C75-4E96-BB19-D61FD93207C8}"});
            table12.AddRow(new string[] {
                        "{FDAFEA76-CC7C-4C95-86EA-72393C5954A0}"});
            table12.AddRow(new string[] {
                        "{098FCF3A-B002-4206-A61F-E6CD765100F5}"});
#line 131
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table12);
#line 139
testRunner.And("PayLog has empty");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet more than one, lot not retriev (1 case)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetMoreThanOneLotNotRetriev1Case()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet more than one, lot not retriev (1 case)", new string[] {
                        "record_mock"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 143
testRunner.When("Click Bet black amount=30 in game round=15");
#line 144
testRunner.And("Click Bet black amount=45 in game round=15");
#line 145
testRunner.And("Click Bet black amount=50 in game round=15");
#line 146
testRunner.Then("PayLog count=\'3\'");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table13.AddRow(new string[] {
                        "15",
                        "30",
                        "Black"});
            table13.AddRow(new string[] {
                        "15",
                        "45",
                        "Black"});
            table13.AddRow(new string[] {
                        "15",
                        "50",
                        "Black"});
#line 147
testRunner.And("Paylog have save information are", ((string)(null)), table13);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table14.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table14.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
#line 152
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table14);
#line 156
testRunner.And("PayLog have 1 record for looking trackingID in lot");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Bet more than one, lot not retriev (more than 1 wait lot trackingID)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Bet")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void BetMoreThanOneLotNotRetrievMoreThan1WaitLotTrackingID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bet more than one, lot not retriev (more than 1 wait lot trackingID)", new string[] {
                        "record_mock"});
#line 159
this.ScenarioSetup(scenarioInfo);
#line 160
testRunner.When("Click Bet white amount=30 in game round=15");
#line 161
testRunner.And("Click Bet black amount=45 in game round=16");
#line 162
testRunner.And("Click Bet white amount=50 in game round=17");
#line 163
testRunner.And("Click Bet white amount=55 in game round=18");
#line 164
testRunner.And("Click Bet black amount=1 in game round=19");
#line 165
testRunner.And("Click Bet black amount=100 in game round=15");
#line 166
testRunner.Then("PayLog count=\'6\'");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "Amount",
                        "Colors"});
            table15.AddRow(new string[] {
                        "15",
                        "30",
                        "White"});
            table15.AddRow(new string[] {
                        "16",
                        "45",
                        "Black"});
            table15.AddRow(new string[] {
                        "17",
                        "50",
                        "White"});
            table15.AddRow(new string[] {
                        "18",
                        "55",
                        "White"});
            table15.AddRow(new string[] {
                        "19",
                        "1",
                        "Black"});
            table15.AddRow(new string[] {
                        "15",
                        "100",
                        "Black"});
#line 167
testRunner.And("Paylog have save information are", ((string)(null)), table15);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table16.AddRow(new string[] {
                        "{E8481A68-7F9F-4466-B7B8-1355ED2D32C6}"});
            table16.AddRow(new string[] {
                        "{A301887F-DF03-4151-AD50-D6C1C7218736}"});
#line 175
testRunner.And("Bet Lot has Retrieved are", ((string)(null)), table16);
#line 179
testRunner.And("PayLog have 4 record for looking trackingID in lot");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
