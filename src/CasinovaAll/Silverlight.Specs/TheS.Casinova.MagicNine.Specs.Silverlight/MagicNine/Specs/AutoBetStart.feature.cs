// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.MagicNine.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class N2NAutoBetStartFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AutoBetStart.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "N2N Auto bet start", @"1.Player have click auto bet start (Silverlight)
2.Sent auto bet start to web server (Silverlight)
3.Generate trackingID and sent it back to client (web Server)
4.Follo trackingID by observer (Silverlight)
5.Found trackingID decrease amount in auto bet (Silverlight)
5.1.If amount int auto bet is zero, remove paylog (Silverlight)
6.Request get bet log from server (Silverlight)
7.List bet log and sent it back to client (Web Server)
8.Display bet log (Silverlight)", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
testRunner.Given("Create and initialize GamePlayViewModel and MagicNine game service");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "WinnerPoint"});
            table1.AddRow(new string[] {
                        "1",
                        "9"});
            table1.AddRow(new string[] {
                        "2",
                        "99"});
            table1.AddRow(new string[] {
                        "3",
                        "999"});
            table1.AddRow(new string[] {
                        "4",
                        "9999"});
#line 14
testRunner.And("Back service have active game rounds are:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "UserName",
                        "BetOrder",
                        "BetDateTime"});
            table2.AddRow(new string[] {
                        "1",
                        "Sakul",
                        "72",
                        "2010-11-17 09:00:00"});
            table2.AddRow(new string[] {
                        "1",
                        "Sakul",
                        "11",
                        "2010-11-17 09:00:30"});
            table2.AddRow(new string[] {
                        "2",
                        "Sakul",
                        "91",
                        "2010-11-17 09:00:59"});
            table2.AddRow(new string[] {
                        "3",
                        "Sakul",
                        "0",
                        "2010-11-17 09:01:00"});
            table2.AddRow(new string[] {
                        "1",
                        "Miolynet",
                        "12",
                        "2010-11-17 10:11:00"});
            table2.AddRow(new string[] {
                        "1",
                        "Miolynet",
                        "13",
                        "2010-11-18 07:23:50"});
#line 20
testRunner.And("Web server have list bet log are", ((string)(null)), table2);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table3.AddRow(new string[] {
                        "{60AD85F6-3978-48AA-9286-E5A7344B77EC}"});
            table3.AddRow(new string[] {
                        "{A82FA8E6-1BCC-443E-A61A-F81B8B4DED83}"});
            table3.AddRow(new string[] {
                        "{CF24E43D-49FA-482B-9AD2-DCF0159F0C41}"});
            table3.AddRow(new string[] {
                        "{2C8EE9D1-A106-4216-AA57-E44554F822A8}"});
            table3.AddRow(new string[] {
                        "{89D5613E-8007-4AAA-8A4D-AF16014B2D5F}"});
            table3.AddRow(new string[] {
                        "{50EA817A-512E-469E-982F-8377F0EF84A6}"});
#line 28
testRunner.And("Setup web service trackingID for AutoBet are", ((string)(null)), table3);
#line 36
testRunner.When("Send request GetListActiveGameRounds() to web server");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Auto bet start normal case")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Auto bet start")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void AutoBetStartNormalCase()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Auto bet start normal case", new string[] {
                        "record_mock"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
testRunner.When("I press AutoBetStart button in game roundID=1, Amount=1");
#line 41
testRunner.And("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line 42
testRunner.Then("PayLog has save RoundID=\'1\', Count=\'1\'");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table4.AddRow(new string[] {
                        "{60AD85F6-3978-48AA-9286-E5A7344B77EC}"});
#line 43
testRunner.And("Lot of TrackingIDs has Retrieved are", ((string)(null)), table4);
#line 46
testRunner.And("PayLog has empty");
#line 47
testRunner.And("Auto bet has been turned off in active game roundID=1 and amount=0");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
            table5.AddRow(new string[] {
                        "72",
                        "2010-11-17 09:00:00"});
            table5.AddRow(new string[] {
                        "11",
                        "2010-11-17 09:00:30"});
#line 48
testRunner.And("Dispaly bet log int game roundID=1 are", ((string)(null)), table5);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Auto bet start auto bet amount 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Auto bet start")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void AutoBetStartAutoBetAmount2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Auto bet start auto bet amount 2", new string[] {
                        "record_mock"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 55
testRunner.When("I press AutoBetStart button in game roundID=1, Amount=2");
#line 56
testRunner.And("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line 57
testRunner.Then("PayLog has save RoundID=\'1\', Count=\'1\'");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table6.AddRow(new string[] {
                        "{60AD85F6-3978-48AA-9286-E5A7344B77EC}"});
            table6.AddRow(new string[] {
                        "{60AD85F6-3978-48AA-9286-E5A7344B77EC}"});
#line 58
testRunner.And("Lot of TrackingIDs has Retrieved are", ((string)(null)), table6);
#line 62
testRunner.And("PayLog has empty");
#line 63
testRunner.And("Auto bet has been turned off in active game roundID=1 and amount=0");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
            table7.AddRow(new string[] {
                        "72",
                        "2010-11-17 09:00:00"});
            table7.AddRow(new string[] {
                        "11",
                        "2010-11-17 09:00:30"});
#line 64
testRunner.And("Dispaly bet log int game roundID=1 are", ((string)(null)), table7);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Auto bet start but lot not retrive all")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Auto bet start")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void AutoBetStartButLotNotRetriveAll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Auto bet start but lot not retrive all", new string[] {
                        "record_mock"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
testRunner.When("I press AutoBetStart button in game roundID=1, Amount=3");
#line 72
testRunner.And("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line 73
testRunner.Then("PayLog has save RoundID=\'1\', Count=\'1\'");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TrackingID"});
            table8.AddRow(new string[] {
                        "{60AD85F6-3978-48AA-9286-E5A7344B77EC}"});
#line 74
testRunner.And("Lot of TrackingIDs has Retrieved are", ((string)(null)), table8);
#line 77
testRunner.And("PayLog has save RoundID=\'1\', Count=\'1\'");
#line 78
testRunner.And("Auto bet has been turned on in active game roundID=1 and amount=2");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
            table9.AddRow(new string[] {
                        "72",
                        "2010-11-17 09:00:00"});
            table9.AddRow(new string[] {
                        "11",
                        "2010-11-17 09:00:30"});
#line 79
testRunner.And("Dispaly bet log int game roundID=1 are", ((string)(null)), table9);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
