// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.MagicNine.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class N2NGetListGamePlayAutoBetInformationFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetGamePlayAutoBetInformation.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "N2N Get list game play auto bet information", @"1.Game has display list active game rounds finish (Silverlight)
2.Send request get list game play information indentify by username to web server (Silverlight)
3.List game play information where owner name and username is match (Web Server)
4.Send game play information back to client (Web Server)
5.Display game play information (Silverlight)", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
testRunner.Given("Create and initialize GamePlayViewModel and MagicNine game service");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "UserName",
                        "RoundID",
                        "Amount"});
            table1.AddRow(new string[] {
                        "Sakul",
                        "1",
                        "30"});
            table1.AddRow(new string[] {
                        "Sakul",
                        "2",
                        "560"});
            table1.AddRow(new string[] {
                        "Sakul",
                        "4",
                        "10245"});
#line 10
testRunner.And("Web server have game play auto bet information are", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "WinnerPoint"});
            table2.AddRow(new string[] {
                        "1",
                        "9"});
            table2.AddRow(new string[] {
                        "2",
                        "99"});
            table2.AddRow(new string[] {
                        "3",
                        "999"});
            table2.AddRow(new string[] {
                        "4",
                        "9999"});
#line 15
testRunner.And("Client have active game rounds are:", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get list auto bet game play information to web server")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get list game play auto bet information")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetListAutoBetGamePlayInformationToWebServer()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get list auto bet game play information to web server", new string[] {
                        "record_mock"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
testRunner.When("Send request GetListGamePlayAutoBet( \'Sakul\' )");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "Name",
                        "Amount",
                        "IsPlaying"});
            table3.AddRow(new string[] {
                        "1",
                        "9",
                        "30",
                        "true"});
            table3.AddRow(new string[] {
                        "2",
                        "99",
                        "560",
                        "true"});
            table3.AddRow(new string[] {
                        "3",
                        "999",
                        "0",
                        "false"});
            table3.AddRow(new string[] {
                        "4",
                        "9999",
                        "10245",
                        "true"});
#line 25
testRunner.Then("Tables in GamePlayViewModel display game play information are", ((string)(null)), table3);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get list auto bet game play information to web server, don\'t have ga" +
            "me play auto bet information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get list game play auto bet information")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetListAutoBetGamePlayInformationToWebServerDonTHaveGamePlayAutoBetInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get list auto bet game play information to web server, don\'t have ga" +
                    "me play auto bet information", new string[] {
                        "record_mock"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
testRunner.When("Send request GetListGamePlayAutoBet( \'Mary\' )");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "Name",
                        "Amount",
                        "IsPlaying"});
            table4.AddRow(new string[] {
                        "1",
                        "9",
                        "0",
                        "false"});
            table4.AddRow(new string[] {
                        "2",
                        "99",
                        "0",
                        "false"});
            table4.AddRow(new string[] {
                        "3",
                        "999",
                        "0",
                        "false"});
            table4.AddRow(new string[] {
                        "4",
                        "9999",
                        "0",
                        "false"});
#line 35
testRunner.Then("Tables in GamePlayViewModel display game play information are", ((string)(null)), table4);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get list auto bet game play information (more than 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get list game play auto bet information")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetListAutoBetGamePlayInformationMoreThan1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get list auto bet game play information (more than 1)", new string[] {
                        "record_mock"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line 44
testRunner.When("Send request GetListGamePlayAutoBet( \'Sakul\' )");
#line 45
testRunner.And("Send request GetListGamePlayAutoBet( \'Sakul\' )");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Round",
                        "Name",
                        "Amount",
                        "IsPlaying"});
            table5.AddRow(new string[] {
                        "1",
                        "9",
                        "30",
                        "true"});
            table5.AddRow(new string[] {
                        "2",
                        "99",
                        "560",
                        "true"});
            table5.AddRow(new string[] {
                        "3",
                        "999",
                        "0",
                        "false"});
            table5.AddRow(new string[] {
                        "4",
                        "9999",
                        "10245",
                        "true"});
#line 46
testRunner.Then("Tables in GamePlayViewModel display game play information are", ((string)(null)), table5);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
