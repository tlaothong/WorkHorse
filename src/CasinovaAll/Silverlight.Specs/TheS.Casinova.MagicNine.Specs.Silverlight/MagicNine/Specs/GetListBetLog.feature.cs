// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace TheS.Casinova.MagicNine.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class N2NGetBetLogFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GetListBetLog.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "N2N Get bet log", "1.Game play has loaded (Silverlight)\r\n2.Send request bet log to web server identi" +
                    "fy by roundID (Silverlight)\r\n3.List bet log and send it back to client (Web Serv" +
                    "er)\r\n4.Display bet log (Silverlight)", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            this.FeatureBackground();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
testRunner.Given("Create and initialize GamePlayViewModel and MagicNine game service");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "WinnerPoint"});
            table1.AddRow(new string[] {
                        "1",
                        "9"});
            table1.AddRow(new string[] {
                        "2",
                        "99"});
            table1.AddRow(new string[] {
                        "3",
                        "999"});
            table1.AddRow(new string[] {
                        "4",
                        "9999"});
#line 9
testRunner.And("Back service have active game rounds are:", ((string)(null)), table1);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "RoundID",
                        "UserName",
                        "BetOrder",
                        "BetDateTime"});
            table2.AddRow(new string[] {
                        "1",
                        "Sakul",
                        "72",
                        "2010-11-17 09:00:00"});
            table2.AddRow(new string[] {
                        "1",
                        "Sakul",
                        "11",
                        "2010-11-17 09:00:30"});
            table2.AddRow(new string[] {
                        "2",
                        "Sakul",
                        "91",
                        "2010-11-17 09:00:59"});
            table2.AddRow(new string[] {
                        "3",
                        "Sakul",
                        "0",
                        "2010-11-17 09:01:00"});
            table2.AddRow(new string[] {
                        "1",
                        "Miolynet",
                        "12",
                        "2010-11-17 10:11:00"});
            table2.AddRow(new string[] {
                        "1",
                        "Miolynet",
                        "13",
                        "2010-11-18 07:23:50"});
#line 15
testRunner.And("Web server have list bet log are", ((string)(null)), table2);
#line 23
testRunner.When("Send request GetListActiveGameRounds() to web server");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get bet log to web server roundID = 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get bet log")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetBetLogToWebServerRoundID1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get bet log to web server roundID = 1", new string[] {
                        "record_mock"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
testRunner.When("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
            table3.AddRow(new string[] {
                        "72",
                        "2010-11-17 09:00:00"});
            table3.AddRow(new string[] {
                        "11",
                        "2010-11-17 09:00:30"});
#line 28
testRunner.Then("Dispaly bet log int game roundID=1 are", ((string)(null)), table3);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get bet log to web server roundID = 2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get bet log")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetBetLogToWebServerRoundID2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get bet log to web server roundID = 2", new string[] {
                        "record_mock"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
testRunner.When("Send request GetListBetlog( \'Sakul\' ) RoundID=\'2\'");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
            table4.AddRow(new string[] {
                        "91",
                        "2010-11-17 09:00:59"});
#line 36
testRunner.Then("Dispaly bet log int game roundID=2 are", ((string)(null)), table4);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get bet log to web server roundID = 3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get bet log")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetBetLogToWebServerRoundID3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get bet log to web server roundID = 3", new string[] {
                        "record_mock"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 42
testRunner.When("Send request GetListBetlog( \'Sakul\' ) RoundID=\'3\'");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
            table5.AddRow(new string[] {
                        "0",
                        "2010-11-17 09:01:00"});
#line 43
testRunner.Then("Dispaly bet log int game roundID=3 are", ((string)(null)), table5);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get bet log (more than 1)")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get bet log")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetBetLogMoreThan1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get bet log (more than 1)", new string[] {
                        "record_mock"});
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
testRunner.When("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line 50
testRunner.And("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line 51
testRunner.And("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line 52
testRunner.And("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line 53
testRunner.And("Send request GetListBetlog( \'Sakul\' ) RoundID=\'1\'");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
            table6.AddRow(new string[] {
                        "72",
                        "2010-11-17 09:00:00"});
            table6.AddRow(new string[] {
                        "11",
                        "2010-11-17 09:00:30"});
#line 54
testRunner.Then("Dispaly bet log int game roundID=1 are", ((string)(null)), table6);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get bet log to web server don\'t have username match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get bet log")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetBetLogToWebServerDonTHaveUsernameMatch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get bet log to web server don\'t have username match", new string[] {
                        "record_mock"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 61
testRunner.When("Send request GetListBetlog( \'Mary\' ) RoundID=\'1\'");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
#line 62
testRunner.Then("Dispaly bet log int game roundID=1 are", ((string)(null)), table7);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get bet log to web server don\'t have rounID match")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get bet log")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetBetLogToWebServerDonTHaveRounIDMatch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get bet log to web server don\'t have rounID match", new string[] {
                        "record_mock"});
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
testRunner.When("Send request GetListBetlog( \'Sakul\' ) RoundID=\'999\'");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
#line 68
testRunner.Then("Dispaly bet log int game roundID=999 are", ((string)(null)), table8);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Send request get bet log to web server RoundID is minus")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Get bet log")]
        [Microsoft.Silverlight.Testing.TagAttribute("record_mock")]
        public virtual void SendRequestGetBetLogToWebServerRoundIDIsMinus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Send request get bet log to web server RoundID is minus", new string[] {
                        "record_mock"});
#line 72
this.ScenarioSetup(scenarioInfo);
#line 73
testRunner.When("Send request GetListBetlog( \'Sakul\' ) RoundID=\'-1\'");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "BetOrder",
                        "BetDateTime"});
#line 74
testRunner.Then("Dispaly bet log int game roundID=-1 are", ((string)(null)), table9);
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
