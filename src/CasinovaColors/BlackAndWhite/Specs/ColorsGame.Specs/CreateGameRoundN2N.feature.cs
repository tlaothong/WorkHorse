// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.3.5.2
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
namespace ColorsGame.Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.3.5.2")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class N2NCreateGameRoundFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CreateGameRoundN2N.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "N2N Create game round", "1.Administrator initial TableCount, DurationTime, IntervalTime\r\n2.Display Sample " +
                    "game tables\r\n3.Admin config and save game configurations and Display game tables" +
                    "", ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Initialize game configuration complete , sampel tables has created")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Create game round")]
        public virtual void InitializeGameConfigurationCompleteSampelTablesHasCreated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Initialize game configuration complete , sampel tables has created", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
testRunner.Given("Create and initialize CreateGameRoundPage");
#line 8
testRunner.And("Config TableCount: 5, DurationTime: 120 minute, IntervalTime: 5 minute");
#line 9
testRunner.When("I press Save");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "TableID",
                        "GameDuration",
                        "Interval"});
            table1.AddRow(new string[] {
                        "1",
                        "120",
                        "5"});
            table1.AddRow(new string[] {
                        "2",
                        "120",
                        "5"});
            table1.AddRow(new string[] {
                        "3",
                        "120",
                        "5"});
            table1.AddRow(new string[] {
                        "4",
                        "120",
                        "5"});
            table1.AddRow(new string[] {
                        "5",
                        "120",
                        "5"});
#line 10
testRunner.Then("sample tables has created", ((string)(null)), table1);
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Save game configuration TableCount: 0, skip generate sample tables")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Create game round")]
        public virtual void SaveGameConfigurationTableCount0SkipGenerateSampleTables()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save game configuration TableCount: 0, skip generate sample tables", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
testRunner.Given("Create and initialize CreateGameRoundPage");
#line 20
testRunner.And("Config TableCount: 0, DurationTime: 120 minute, IntervalTime: 5 minute");
#line 21
testRunner.When("I press Save");
#line 22
testRunner.Then("display sample tables has skip");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Save game configuration using TableCount is minus value, skip generate sample tab" +
            "les")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Create game round")]
        public virtual void SaveGameConfigurationUsingTableCountIsMinusValueSkipGenerateSampleTables()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save game configuration using TableCount is minus value, skip generate sample tab" +
                    "les", ((string[])(null)));
#line 24
this.ScenarioSetup(scenarioInfo);
#line 25
testRunner.Given("Create and initialize CreateGameRoundPage");
#line 26
testRunner.And("Config TableCount: -1, DurationTime: 120 minute, IntervalTime: 5 minute");
#line 27
testRunner.When("I press Save");
#line 28
testRunner.Then("display sample tables has skip");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Save game configuration using DurationTime is minus value, skip generate sample t" +
            "ables")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Create game round")]
        public virtual void SaveGameConfigurationUsingDurationTimeIsMinusValueSkipGenerateSampleTables()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save game configuration using DurationTime is minus value, skip generate sample t" +
                    "ables", ((string[])(null)));
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
testRunner.Given("Create and initialize CreateGameRoundPage");
#line 32
testRunner.And("Config TableCount: 5, DurationTime: -1 minute, IntervalTime: 5 minute");
#line 33
testRunner.When("I press Save");
#line 34
testRunner.Then("display sample tables has skip");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Save game configuration using IntervalTime is minus value, skip generate sample t" +
            "ables")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Create game round")]
        public virtual void SaveGameConfigurationUsingIntervalTimeIsMinusValueSkipGenerateSampleTables()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save game configuration using IntervalTime is minus value, skip generate sample t" +
                    "ables", ((string[])(null)));
#line 36
this.ScenarioSetup(scenarioInfo);
#line 37
testRunner.Given("Create and initialize CreateGameRoundPage");
#line 38
testRunner.And("Config TableCount: 5, DurationTime: 120 minute, IntervalTime: -1 minute");
#line 39
testRunner.When("I press Save");
#line 40
testRunner.Then("display sample tables has skip");
#line hidden
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Save game configuration using TableCount,DurationTime,IntervalTime are minus valu" +
            "e, skip generate sample tables")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "N2N Create game round")]
        public virtual void SaveGameConfigurationUsingTableCountDurationTimeIntervalTimeAreMinusValueSkipGenerateSampleTables()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Save game configuration using TableCount,DurationTime,IntervalTime are minus valu" +
                    "e, skip generate sample tables", ((string[])(null)));
#line 42
this.ScenarioSetup(scenarioInfo);
#line 43
testRunner.Given("Create and initialize CreateGameRoundPage");
#line 44
testRunner.And("Config TableCount: -1, DurationTime: -1 minute, IntervalTime: -1 minute");
#line 45
testRunner.When("I press Save");
#line 46
testRunner.Then("display sample tables has skip");
#line hidden
            testRunner.CollectScenarioErrors();
        }
    }
}
#endregion
